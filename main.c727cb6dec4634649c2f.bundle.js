(()=>{var e,t={914:e=>{e.exports="uniform sampler2D tDiffuse;uniform vec3 color1;uniform vec3 color2;varying vec2 vUv;void main(){vec4 texel=texture2D(tDiffuse,vUv);vec4 color=mix(vec4(color1,1.),vec4(color2,1.),texel);gl_FragColor=color;}"},775:e=>{e.exports="varying vec2 vUv;void main(){vUv=uv;gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);}"},835:e=>{e.exports="varying vec2 vUv;varying vec3 vPosition;varying vec3 vNormalW;varying vec3 vNormal;void main(){vUv=uv;vPosition=position;vNormalW=normalize(vec3(vec4(normal,0.)*modelMatrix));vNormal=normal;gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);}"},450:e=>{e.exports="precision mediump float;varying vec2 vUv;uniform float time;uniform vec3 color0;uniform vec3 color3;uniform vec3 color1;uniform vec2 P0;uniform vec2 P1;uniform vec2 P2;uniform vec2 P3;uniform vec3 color2;uniform float steps;uniform float timeScale;uniform int numOfColors;\n#define M_PI 3.1415926535897932384626433832795\nvec4 FourColorGradient(){vec2 uv=vUv;uv*=1.;float index=0.;index=step(1.,mod(uv.y,2.));index+=step(1.,mod(uv.x,2.))*2.;if(index==1.){uv.x=1.-uv.x;}else if(index==2.){uv.y=1.-uv.y;}else if(index==0.){uv=1.-uv;}uv=fract(uv);vec2 Q=P0-P2;vec2 R=P1-P0;vec2 S=R+P2-P3;vec2 T=P0-uv;float u;float t;if(Q.x==0.&&S.x==0.){u=-T.x/R.x;t=(T.y+u*R.y)/(Q.y+u*S.y);}else if(Q.y==0.&&S.y==0.){u=-T.y/R.y;t=(T.x+u*R.x)/(Q.x+u*S.x);}else{float A=S.x*R.y-R.x*S.y;float B=S.x*T.y-T.x*S.y+Q.x*R.y-R.x*Q.y;float C=Q.x*T.y-T.x*Q.y;if(abs(A)<0.0001)u=-C/B;else{u=(-B+sqrt(B*B-4.*A*C))/(2.*A);t=(T.y+u*R.y)/(Q.y+u*S.y);}}u=clamp(u,0.,1.);t=clamp(t,0.,1.);t=smoothstep(0.,1.,t);u=smoothstep(0.,1.,u);vec4 colorA=mix(vec4(color0,1.),vec4(color1,1.),u);vec4 colorB=mix(vec4(color2,1.),vec4(color3,1.),u);return mix(colorA,colorB,t);}void main(){vec2 st=vUv;vec4 gradient;gradient=FourColorGradient();gl_FragColor=gradient;}"},840:e=>{e.exports="uniform float hueVal;uniform sampler2D tex;uniform float brightness;uniform float contrast;uniform float saturation;varying vec2 vUv;vec4 HueShift(in vec3 Color,in float Shift){vec3 P=vec3(0.55735)*dot(vec3(0.55735),Color);vec3 U=Color-P;vec3 V=cross(vec3(0.55735),U);Color=U*cos(Shift*6.2832)+V*sin(Shift*6.2832)+P;return vec4(Color,1.);}mat4 brightnessMatrix(float brightness){return mat4(1,0,0,0,0,1,0,0,0,0,1,0,brightness,brightness,brightness,1);}mat4 contrastMatrix(float contrast){float t=(1.-contrast)/2.;return mat4(contrast,0,0,0,0,contrast,0,0,0,0,contrast,0,t,t,t,1);}mat4 saturationMatrix(float saturation){vec3 luminance=vec3(0.3086,0.6094,0.0820);float oneMinusSat=1.-saturation;vec3 red=vec3(luminance.x*oneMinusSat);red+=vec3(saturation,0,0);vec3 green=vec3(luminance.y*oneMinusSat);green+=vec3(0,saturation,0);vec3 blue=vec3(luminance.z*oneMinusSat);blue+=vec3(0,0,saturation);return mat4(red,0,green,0,blue,0,0,0,0,1);}void main(){vec2 uv=vUv;vec4 Color=HueShift(texture2D(tex,uv).xyz,hueVal);gl_FragColor=brightnessMatrix(brightness)*contrastMatrix(contrast)*saturationMatrix(saturation)*Color;}"},511:e=>{e.exports="varying vec2 vUv;varying vec3 vPosition;const mat2 myt=mat2(.12121212,.13131313,-.13131313,.12121212);const vec2 mys=vec2(1e4,1e6);vec2 hash22(vec2 p){p=mod(p,5.);float n=sin(dot(p,vec2(41,289)));return fract(vec2(8,1)*262144.*n);}vec3 permute(vec3 x){return mod((34.*x+1.)*x,289.);}vec2 cellular(vec3 P){\n#define K 0.142857142857 \n#define Ko 0.428571428571 \n#define K2 0.020408163265306 \n#define Kz 0.166666666667 \n#define Kzo 0.416666666667 \n#define jitter 1.0 \nvec3 Pi=mod(floor(P),289.);vec3 Pf=fract(P)-0.5;vec3 Pfx=Pf.x+vec3(1.,0.,-1.);vec3 Pfy=Pf.y+vec3(1.,0.,-1.);vec3 Pfz=Pf.z+vec3(1.,0.,-1.);vec3 p=permute(Pi.x+vec3(-1.,0.,1.));vec3 p1=permute(p+Pi.y-1.);vec3 p2=permute(p+Pi.y);vec3 p3=permute(p+Pi.y+1.);vec3 p11=permute(p1+Pi.z-1.);vec3 p12=permute(p1+Pi.z);vec3 p13=permute(p1+Pi.z+1.);vec3 p21=permute(p2+Pi.z-1.);vec3 p22=permute(p2+Pi.z);vec3 p23=permute(p2+Pi.z+1.);vec3 p31=permute(p3+Pi.z-1.);vec3 p32=permute(p3+Pi.z);vec3 p33=permute(p3+Pi.z+1.);vec3 ox11=fract(p11*K)-Ko;vec3 oy11=mod(floor(p11*K),7.)*K-Ko;vec3 oz11=floor(p11*K2)*Kz-Kzo;vec3 ox12=fract(p12*K)-Ko;vec3 oy12=mod(floor(p12*K),7.)*K-Ko;vec3 oz12=floor(p12*K2)*Kz-Kzo;vec3 ox13=fract(p13*K)-Ko;vec3 oy13=mod(floor(p13*K),7.)*K-Ko;vec3 oz13=floor(p13*K2)*Kz-Kzo;vec3 ox21=fract(p21*K)-Ko;vec3 oy21=mod(floor(p21*K),7.)*K-Ko;vec3 oz21=floor(p21*K2)*Kz-Kzo;vec3 ox22=fract(p22*K)-Ko;vec3 oy22=mod(floor(p22*K),7.)*K-Ko;vec3 oz22=floor(p22*K2)*Kz-Kzo;vec3 ox23=fract(p23*K)-Ko;vec3 oy23=mod(floor(p23*K),7.)*K-Ko;vec3 oz23=floor(p23*K2)*Kz-Kzo;vec3 ox31=fract(p31*K)-Ko;vec3 oy31=mod(floor(p31*K),7.)*K-Ko;vec3 oz31=floor(p31*K2)*Kz-Kzo;vec3 ox32=fract(p32*K)-Ko;vec3 oy32=mod(floor(p32*K),7.)*K-Ko;vec3 oz32=floor(p32*K2)*Kz-Kzo;vec3 ox33=fract(p33*K)-Ko;vec3 oy33=mod(floor(p33*K),7.)*K-Ko;vec3 oz33=floor(p33*K2)*Kz-Kzo;vec3 dx11=Pfx+jitter*ox11;vec3 dy11=Pfy.x+jitter*oy11;vec3 dz11=Pfz.x+jitter*oz11;vec3 dx12=Pfx+jitter*ox12;vec3 dy12=Pfy.x+jitter*oy12;vec3 dz12=Pfz.y+jitter*oz12;vec3 dx13=Pfx+jitter*ox13;vec3 dy13=Pfy.x+jitter*oy13;vec3 dz13=Pfz.z+jitter*oz13;vec3 dx21=Pfx+jitter*ox21;vec3 dy21=Pfy.y+jitter*oy21;vec3 dz21=Pfz.x+jitter*oz21;vec3 dx22=Pfx+jitter*ox22;vec3 dy22=Pfy.y+jitter*oy22;vec3 dz22=Pfz.y+jitter*oz22;vec3 dx23=Pfx+jitter*ox23;vec3 dy23=Pfy.y+jitter*oy23;vec3 dz23=Pfz.z+jitter*oz23;vec3 dx31=Pfx+jitter*ox31;vec3 dy31=Pfy.z+jitter*oy31;vec3 dz31=Pfz.x+jitter*oz31;vec3 dx32=Pfx+jitter*ox32;vec3 dy32=Pfy.z+jitter*oy32;vec3 dz32=Pfz.y+jitter*oz32;vec3 dx33=Pfx+jitter*ox33;vec3 dy33=Pfy.z+jitter*oy33;vec3 dz33=Pfz.z+jitter*oz33;vec3 d11=dx11*dx11+dy11*dy11+dz11*dz11;vec3 d12=dx12*dx12+dy12*dy12+dz12*dz12;vec3 d13=dx13*dx13+dy13*dy13+dz13*dz13;vec3 d21=dx21*dx21+dy21*dy21+dz21*dz21;vec3 d22=dx22*dx22+dy22*dy22+dz22*dz22;vec3 d23=dx23*dx23+dy23*dy23+dz23*dz23;vec3 d31=dx31*dx31+dy31*dy31+dz31*dz31;vec3 d32=dx32*dx32+dy32*dy32+dz32*dz32;vec3 d33=dx33*dx33+dy33*dy33+dz33*dz33;\n#if 0\nvec3 d1=min(min(d11,d12),d13);vec3 d2=min(min(d21,d22),d23);vec3 d3=min(min(d31,d32),d33);vec3 d=min(min(d1,d2),d3);d.x=min(min(d.x,d.y),d.z);return sqrt(d.xx);\n#else\nvec3 d1a=min(d11,d12);d12=max(d11,d12);d11=min(d1a,d13);d13=max(d1a,d13);d12=min(d12,d13);vec3 d2a=min(d21,d22);d22=max(d21,d22);d21=min(d2a,d23);d23=max(d2a,d23);d22=min(d22,d23);vec3 d3a=min(d31,d32);d32=max(d31,d32);d31=min(d3a,d33);d33=max(d3a,d33);d32=min(d32,d33);vec3 da=min(d11,d21);d21=max(d11,d21);d11=min(da,d31);d31=max(da,d31);d11.xy=(d11.x<d11.y)?d11.xy:d11.yx;d11.xz=(d11.x<d11.z)?d11.xz:d11.zx;d12=min(d12,d21);d12=min(d12,d22);d12=min(d12,d31);d12=min(d12,d32);d11.yz=min(d11.yz,d12.xy);d11.y=min(d11.y,d12.z);d11.y=min(d11.y,d11.z);return sqrt(d11.xy);\n#endif\n}vec2 rhash(vec2 uv){uv*=myt;uv*=mys;return fract(fract(uv/mys)*uv);}vec3 hash(vec3 p){return fract(sin(vec3(dot(p,vec3(1.,57.,113.)),dot(p,vec3(57.,113.,1.)),dot(p,vec3(113.,1.,57.))))*43758.5453);}float voronoi(in vec2 p){vec2 g=floor(p),o;p-=g;vec3 d=vec3(1);for(int y=-1;y<=1;y++){for(int x=-1;x<=1;x++){o=vec2(x,y);o+=hash22(g+o)-p;d.z=dot(o,o);d.y=max(d.x,min(d.y,d.z));d.x=min(d.x,d.z);}}return d.y-d.x;}vec4 voronoiHeightmap(vec2 vUv){vUv+=sin(vUv*6.283*2.-cos(vUv.yx*6.283*4.))*.01;vUv.x*=1.8;float c=voronoi(vUv*5.-.35)*.6+voronoi((vUv.yx+.5)*10.)*.3+(1.-voronoi(vUv*25.))*.075+voronoi(vUv*60.)*.025;c+=dot(vec3(1.),vec3(.299,.587,.114))*.1;return vec4(min(c/1.1,1.));}void main(){vec2 vars=(vPosition.xy+vPosition.z)*.02;float baseMult=.015;vec2 F=cellular(vPosition*baseMult*5.-.35)*.6+(cellular(vPosition.yxz*baseMult+.5)*3.)*.3+(1.-cellular(vPosition*baseMult*25.))*0.075+cellular(vPosition*baseMult*60.)*.025;float n=F.y-F.x;gl_FragColor=vec4(vec3(n),1.);}"},712:e=>{e.exports="precision mediump float;varying vec2 vUv;uniform float time;uniform vec3 color0;uniform vec3 color1;uniform float steps;uniform float timeScale;uniform int numOfColors;\n#define M_PI 3.1415926535897932384626433832795\nvoid squareWaveGradient(){vec2 st=vUv;float m=sin(vUv.y*1.);float i=abs(fract(vUv.y+time*timeScale)-0.5)*2.;}void main(){vec2 st=vUv;float m=sin(vUv.y*1.);float i=abs(fract(vUv.y+time*timeScale)-0.5)*2.;gl_FragColor=vec4(mix(color0,color1,i),1.);}"},76:e=>{e.exports="varying vec2 vUv;void main(){vUv=uv;gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);}"},846:e=>{e.exports="varying vec2 vUv;uniform sampler2D noise;uniform float noiseScale;uniform float innerCircleScale;\n#define PI 3.141592653589793\nfloat circle(in vec2 _st,in float _radius){vec2 dist=_st-vec2(0.5);float smoothing=1.2;return smoothstep(_radius-(_radius*smoothing),_radius+(_radius*smoothing),dot(dist,dist)*4.);}float dist(vec2 p0,vec2 pf){return sqrt((pf.x-p0.x)*(pf.x-p0.x)+(pf.y-p0.y)*(pf.y-p0.y));}highp float rand(const in vec2 uv){const highp float a=12.9898,b=78.233,c=43758.5453;highp float dt=dot(uv.xy,vec2(a,b)),sn=mod(dt,PI);return fract(sin(sn)*c);}vec3 dithering(vec3 color){float grid_position=rand(gl_FragCoord.xy);vec3 dither_shift_RGB=vec3(0.25/255.,-0.25/255.,0.25/255.);dither_shift_RGB=mix(2.*dither_shift_RGB,-2.*dither_shift_RGB,grid_position);return color+dither_shift_RGB;}void main(){vec2 uv=vUv;uv.y*=1.;float _circle=(1.-circle(vUv,0.5));float _circle2=(circle(vUv,0.99));float _circle3=(1.-circle(vUv,0.3))*.5;float _circle4=1.-(circle(vUv,innerCircleScale));float ring=(1.-(_circle+_circle2))+_circle3;float noise=texture2D(noise,vUv).r*noiseScale;float heightNoiseCombined=mix(ring+max(noise,-10.),.5,_circle4);float d=1.-dist(vec2(0.5,0.5),vUv);gl_FragColor=vec4(vec3(heightNoiseCombined),1.);gl_FragColor.rgb=dithering(gl_FragColor.rgb);}"},149:e=>{e.exports="uniform float time;uniform vec2 resolution;varying vec2 vUv;uniform vec2 repeats;varying vec3 vPosition;float Hash(in vec2 p,in float scale){p=mod(p,scale);return fract(sin(dot(p,vec2(27.16898,38.90563)))*5151.5473453);}float Noise(in vec2 p,in float scale){vec2 f;p*=scale;f=fract(p);p=floor(p);f=f*f*(3.-2.*f);float res=mix(mix(Hash(p,scale),Hash(p+vec2(1.,0.),scale),f.x),mix(Hash(p+vec2(0.,1.),scale),Hash(p+vec2(1.,1.),scale),f.x),f.y);return res;}float fBm(in vec2 p){float offset=1.;p+=vec2(sin(offset*.7),cos(offset*.45))*(.1)+.1/resolution;float f=0.;float scale=5.;p=mod(p,scale);float amp=0.6;for(int i=0;i<5;i++){f+=Noise(p,scale)*amp;amp*=.4;scale*=2.;}return min(f,1.);}void main(){vec2 uv=vUv*repeats;float bri=fBm(uv);bri=pow(bri,1.);vec3 col=vec3(bri);gl_FragColor=vec4(col,1.);}"},403:e=>{e.exports="varying vec2 vUv;varying vec3 vPosition;void main(){vUv=uv;vPosition=position;gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);}"},182:(e,t,n)=>{"use strict";var o=n(212);class i{constructor(e){const{id:t,type:n,height:o,scale:i,isInstanced:a,nInstances:s,nMaterials:r,previewMaterial:l,rotateAroundCenter:d,materials:c,castShadows:u,textures:m,useColors:f,useNormal:v,isLayout:p,isStand:h,exclude:g,include:x}=e;this.id=t,this.type=this.defaultParam(n,t),this.isLayout=this.defaultParam(p,!1),this.scale=this.defaultParam(i,120),this.height=this.defaultParam(o,130),this.isInstanced=this.defaultParam(a,!1),this.isStand=this.defaultParam(h,!1),this.castShadows=this.defaultParam(u,!1),this.previewMaterial=this.defaultParam(l,-1),this.nInstances=this.defaultParam(s,4),this.nMaterials=this.defaultParam(r,0),this.rotateAroundCenter=this.defaultParam(d,!0),this.materials=this.defaultParam(c,[]),r>0&&this.setMaterialsFromN(r),this.useColors=this.defaultParam(f,!1),this.useNormal=this.defaultParam(v,!1),this.exclude=this.defaultParam(g,[]);const y=this.defaultParam(m,["bump","diffuse","normal","roughness","metallic"]);return this.textures=y.filter((e=>-1===this.exclude.indexOf(e))),this.include=this.defaultParam(x,[]),this.textures=[...this.include,...this.textures],this}setMaterialsFromN(e){const t=[];for(let n=1;n<e+1;n++)t.push(n.toString());this.materials=t}defaultParam(e,t){return null==e?t:e}}const a={attributes:[],modelHeight:392,DPR:1,scene:{baseHeight:40,isFog:!1,isTerrain:!1,fogSaturation:-.3,isNight:!1,isAnimatedCamera:!0,timeOfDay:"night",isPostProcessing:!1,hdri:{hue:0,brightness:0,saturation:0,contrast:1}},s3Url:"https://lost-home-worlds.s3.us-east-2.amazonaws.com",isArweave:!0,arweaveUrl:"https://arweave.net/",colorType:"monochrome",primaryColor:{},secondaryColor:{},colors:[],lights:{radius:120,num:4,bias:.5,distance:{min:1,max:100},frequency:{min:0,max:10},amp:{min:1,max:4},isTerrainLights:!1,nTerrainLights:5},terrain:{type:""},tower:{isSinglePartSystem:!1,randomizeHue:!1,randomizeSaturation:!1,randomizeColor:!1,numPresets:10,rotationSpeed:2,materialType:"glass",maxCount:{min:60,max:800},minRadius:{min:5.4,max:6},maxRadius:{min:25,max:60},padding:{min:.01,max:.02},packAttempts:1e3,towerRotationSpeed:1,towerRotationsThreshold:6,segments:{min:3,max:16},numParts:{min:1,max:8},smoothing:{min:.8,max:.25}},isLoaded:!1,layoutId:0,standId:0,nStands:12,nLayouts:4,standData:{1:{nStandTextures:1,nBaseTextures:1,stand:!0,baseName:"1"},2:{nStandTextures:1,nBaseTextures:1,stand:!0,baseName:"2"},3:{nStandTextures:1,nBaseTextures:1,stand:!0,baseName:"3"},4:{nBaseTextures:1,nStandTextures:1,baseName:"4",stand:!0},5:{nBaseTextures:2,stand:!1,baseName:"5"},6:{nBaseTextures:1,nStandTextures:1,stand:!0,baseName:"6"},7:{nBaseTextures:1,nStandTextures:1,stand:!0,baseName:"7"},8:{nBaseTextures:4,nStandTextures:4,stand:!0,baseName:"8"},9:{nBaseTextures:1,nStandTextures:1,stand:!0,standName:"Crab 6",baseName:"9"},10:{nBaseTextures:4,nStandTextures:4,stand:!0,baseName:"10"},11:{nBaseTextures:4,nStandTextures:4,stand:!0,baseName:"11"},12:{nBaseTextures:4,nStandTextures:4,stand:!1,baseName:"12"}},layoutData:{1:{nTextures:1},2:{nTextures:1},3:{nTextures:1},4:{nTextures:1},5:{nTextures:1},6:{nTextures:2},7:{nTextures:1}},models:{base:new i({id:"base",isStand:!0,castShadows:!0}),bottle:new i({id:"bottle",isLayout:!0}),stand:new i({id:"stand",type:"stand",useNormal:!1,isStand:!0,castShadows:!0}),gas_tank:new i({id:"gas_tank",isLayout:!0,castShadows:!0}),bottle_top:new i({id:"bottle_top",isLayout:!0}),pipes:new i({id:"pipes",isLayout:!0,useNormal:!0,exclude:["bump"],nMaterials:10}),stair_1:new i({id:"stair_1",nMaterials:5}),stairs_2:new i({id:"stairs_2",nMaterials:2}),stairs_3:new i({id:"stairs_3",nMaterials:3}),stairs_4:new i({id:"stairs_4",nMaterials:2}),brutalist_1:new i({id:"brutalist_1",type:"walls",nMaterials:3,previewMaterial:3}),brutalist_2:new i({id:"brutalist_2",type:"walls",nMaterials:1}),rectangular_window_2:new i({id:"rectangular_window_2",type:"walls",nMaterials:2}),jail_1:new i({id:"jail_1",type:"walls",nMaterials:2}),jail_2:new i({id:"jail_2",type:"walls",nMaterials:3,previewMaterial:3}),rectangular_window_1:new i({id:"rectangular_window_1",type:"walls",nMaterials:5}),rectangular_window_3:new i({id:"rectangular_window_3",type:"walls",nMaterials:2}),window_1:new i({id:"window_1",type:"props",rotateAroundCenter:!1,include:["emissive"],scale:30,isInstanced:!0,nInstances:8,nMaterials:1}),simple_wall:new i({id:"simple_wall",type:"walls",nMaterials:8}),circular_windows_1:new i({id:"circular_windows_1",type:"walls",isInstanced:!0,nInstances:2,nMaterials:5}),floor:new i({id:"floor",nMaterials:24,useNormal:!0,castShadows:!0})}};!function(){let e="0123456789abcdef",t="0x";for(let n=64;n>0;--n)t+=e[Math.floor(Math.random()*e.length)]}();const s={1:"0x72ba06719f9d68f3e9acfadba00c2c5634c294719f31baf069925473e899a990",2:"0xb5f742bf01e3660094884e3c200987b06e1e80cd26e32bf59863aee859cac683",3:"0xb5ff691f60689c4a95df17b17702bb81fcac9f267a5ad2908918f861a42cb34a",4:"0xfea9392428d1962ee3e0c53a0ba98854c349af6e65bd804fe0b7232159420666",5:"0x818a497607e10f9e57f30fe0b198c27f3ecbf09eafba3d2a08d2d74bb7141be9",6:"0xbd1c99ec89b97c03ac39c634b01c6c9c9f72eb353dcca05ac88e2a31339171aa",7:"0x2ed04a841498d60fbda0d57f10495f2f29963c2ad8e37626b8d5c45fca1a49b3",8:"0xa4c9661990950a848c96ed45db4fc3e2afb4ed51bbf7b55d344339758c6ca1f1",9:"0x88ab4efd1344c716b23d3fd9a7e20064efcf385c8a4eeb3c337cffb3de109545",10:"0xa9a926934603332773e0c3ffade507117d3612d1952e2bcdd7b41fde0b485095"},r=function(){let e;const t=new URLSearchParams(window.location.search).get("id");return e=s[t],e="0x561b2bf153b46894952954178d710f5e6c4a46ef40d98266651286627e13890b",parseInt("0x561b2bf153b46894952954178d710f5e6c4a46ef40d98266651286627e13890b".slice(0,16),16)}(),l=new class{constructor(e){this.seed=e}randomDec(){return this.seed^=this.seed<<13,this.seed^=this.seed>>17,this.seed^=this.seed<<5,(this.seed<0?1+~this.seed:this.seed)%1e3/1e3}randomNum(e,t){return e+(t-e)*this.randomDec()}randomInt(e,t){return Math.floor(this.randomNum(e,t+1))}randomBias(e,t,n,o){const i=this.randomDec()*(t-e)+e,a=this.randomDec()*o;return i*(1-a)+n*a}}(r),d={manifest:"arweave/paths",version:"0.1.0",paths:{"layouts/7/bottle/bottle.obj":{id:"T7a8_osu3Uj1PYBMrQEo6LLVsdtqqFr_0DZnJMY6_NE"},"layouts/7/bottle_top/1/bump.jpg":{id:"JVo328yEwKmAnDoFBQe_KbE6fxxCzgWM_qKQqhGABfU"},"layouts/7/bottle_top/1/diffuse.jpg":{id:"ZnS90O-fs1o-4HrOKldI0Jvnn32VjyGlb38XvZqWDVE"},"layouts/7/bottle_top/1/metallic.jpg":{id:"SJlRkcL1dwi06lDkicETrjBr9yj0H13269OU_1IM4oA"},"layouts/7/bottle_top/1/normal.jpg":{id:"ozShOksv4zYz-RuTidIfO4U_M3TY0qD1AS4SLDlKy0M"},"layouts/7/bottle_top/1/roughness.jpg":{id:"_gZ_63OTd0lGVSJNwDqHkWD6EQDxVbIvdtIv82L-IaA"},"layouts/7/bottle_top/bottle_top.obj":{id:"YSfvIWIxS6mKMoY3kTotB3-sbqCa5LK23rmSwrAVhs4"},"layouts/7/gas_tank/1/bump.jpg":{id:"YepSjIX0G2HBDdhi7VmEZR0y5ZYCpVLDLhT1myrVxjM"},"layouts/7/gas_tank/1/diffuse.jpg":{id:"V_vfvelOkyTjwA2jPSOLfMWQPnxy7zDPRI7uzwnZTTg"},"layouts/7/gas_tank/1/metallic.jpg":{id:"Qsw-LEzzy73afgfM2_A7PyE4p2Bu2dNCf1EQhi13fEw"},"layouts/7/gas_tank/1/normal.jpg":{id:"Paeq1ZwfI3tIURmZrpkOMd4WHR11ipZMFZ_Qy9vQMKA"},"layouts/7/gas_tank/1/roughness.jpg":{id:"Xk-7ySQEyubqILtGShVBbwNHv8ZTaa6u3ZzlDoRcvTM"},"layouts/7/gas_tank/gas_tank.mtl":{id:"L5jVt7xs7-X59rWlj6liacNYUNsf5vzYwo47VhKC_FU"},"layouts/7/gas_tank/gas_tank.obj":{id:"596yqVG6MDOF0OuoLyRD6wBNE19VKRbteLfFvNhqQ_Y"},"layouts/7/pipes/pipes.obj":{id:"8bQVP9iFGmng7mBzUTtGalRo_oc6kjWAzT94_o5zl1w"},"models/brutalist_1/brutalist_1.obj":{id:"agrvIN1q83_zv9e8MbzZlS_UYi98tGpL7vuUbdXIz5c"},"models/brutalist_1/tex/3/bump.jpg":{id:"E0fMKeAseyG4lpDdpspIDXjPV-7lVHYx573jbS3R_3c"},"models/brutalist_1/tex/3/diffuse.jpg":{id:"8w8kl5_1kQMTNCTsY61IcvRqXOK6ARPUJ3qYGHduXNU"},"models/brutalist_1/tex/3/metallic.jpg":{id:"njqHCT2OTu3Gao92c2Dp-RByNZqDmr_5c7AaRh_qFXg"},"models/brutalist_1/tex/3/normal.jpg":{id:"dGdiRgGbJEeFKNwY8zXtHGBMcjFG_5i3cxmM3p-tSbk"},"models/brutalist_1/tex/3/roughness.jpg":{id:"EMqN2RSuXuV9F7nu6BYJ399ZhBL3-7Iu8ODGiXABsAg"},"models/floor/floor.obj":{id:"4KMesVwEK8Y394990Qm_KWLgesPbIxz1O1phz02gMWM"},"models/floor/tex/1/bump.jpg":{id:"XS2H5UTw9loVB4qxlADebDh8jUgxzi4uoW8ewnhFxIs"},"models/floor/tex/1/diffuse.jpg":{id:"zVRSrWmZSagKE77NY-mQe6H0xgHVvSUA0xLshbA2HFw"},"models/floor/tex/1/metallic.jpg":{id:"QCQR5wbmF9_eAzDAetElg4JFyG5ZI3mqsoblcKBrIHk"},"models/floor/tex/1/normal.jpg":{id:"jWzGHUVI9NfSMUpLf8gT9OETx2Y1oyoMDEK6Z7KkJkU"},"models/floor/tex/1/roughness.jpg":{id:"-SQJZWRmG5wfKCVHD1rD5WLfPhbbZQMUAoWlAWe3uyU"},"models/pipes/tex/8/diffuse.jpg":{id:"GSoecd4CHlJUGbKe4GPAGPqAEcEuHoaZS30Uhb6CS0c"},"models/pipes/tex/8/metallic.jpg":{id:"9_LSnPEL01q5QYs9SBDVT18kGcVF5FCjfWqgSFYo_dI"},"models/pipes/tex/8/normal.jpg":{id:"vPIVieX-J_2tqIn9bd-hu2WiQMLPF1Or6D7WRkXgkRM"},"models/pipes/tex/8/roughness.jpg":{id:"VuMXRhTr7brBZAJEjWTG2ImrETTubRuatB9XpXWX4no"},"package-lock.json":{id:"eiTK-8Rx1xckKkVSR-8xmRAk2S5vjlvSa4t6NxdxEB4"},"stands/4/base/1/bump.jpg":{id:"CPUJcG6h6SpHrCgf3nN7mL2BxuY3aC4mo7jnlipPlcI"},"stands/4/base/1/diffuse.jpg":{id:"hac2nsD6QcsX-76yiQt00H-Mz_f7ZYzfljsG8vU-faI"},"stands/4/base/1/metallic.jpg":{id:"0y2OCYB8nNu7wGdhs5D7fMjAjssPLrFKY4cj9IEHZgY"},"stands/4/base/1/normal.jpg":{id:"j3-yXvoHYyKxL-SpVcyoegWUaAmmwLv8-QLt3LAIcH8"},"stands/4/base/1/roughness.jpg":{id:"-yGolYbAwctZKfMR1mKxFgSbyin-5v_GR_eGu7WkioA"},"stands/4/base/base.obj":{id:"XsU3ibzId3RGwCI3bGpJemalxkSFDiz3JI8qNNqHSA4"},"stands/4/stand/1/bump.jpg":{id:"WUxQJnxvsbc2URTwhf0w6sHp5oRRWrPiYU3FwwIjWZw"},"stands/4/stand/1/diffuse.jpg":{id:"-IPoZNfPQbLiBZF6B3keOLSrR2MAb_RKhFmfcSNrsnE"},"stands/4/stand/1/metallic.jpg":{id:"oypHJdAoe5nQTtyFAZTuzu2-x0iscX8YcI-UNhzha3A"},"stands/4/stand/1/normal.jpg":{id:"faC11LW70hekEq3Jd6bVC48KL6x6hJa-wdgY3Y-u2Uw"},"stands/4/stand/1/roughness.jpg":{id:"tyMYCSUg2E_rJnK-QQAVZmxrqGC_Fl2S5ZtTX-ay8kg"},"stands/4/stand/stand.obj":{id:"TBwk2qiiPAVep9g0CTBfD0Kpy0vAO3moa5wzHectiNo"}},index:{path:"manifest.json"}};function c(e){let t=[];Object.assign(t,e);for(let e=t.length-1;e>0;e--){const n=l.randomNum(0,1),o=Math.floor(n*(e+1));[t[e],t[o]]=[t[o],t[e]]}return t}function u(e){const t={};for(let n=1;n<=e;n++)t[n]=.2;return t}const m=(e,t,n)=>{let o="";return e.isLayout?(o=`layouts/${a.layoutId}/${e.id}/`,"pipes"===e.id&&(o=((e,t,n)=>n?`models/${t.id}/tex/`:e)(o,e,t))):e.isStand?o=`stands/${a.standId}/${e.id}/`:(o=`models/${e.id}/`,t&&(o+="tex/")),o+=t?`${t}/${n}.jpg`:`${e.id}.obj`,o=a.isArweave?(e=>{const t=d.paths[e].id;return`${a.arweaveUrl}${t}`})(o):`${a.s3Url}/${o}`,o},f=(e,t,n,i)=>{const a=new o.xsS,s=new o.iKG(n/-2,n/2,n/2,n/-2,1,1e3);s.position.z=1;const r=new o._12(n,n),l=new o.Kj0(r,t);a.add(l);let d=new o.dd2(n,n);return d.texture.wrapS=d.texture.wrapT=o.rpg,d.texture.repeat.set(i,i),e.setRenderTarget(d),e.render(a,s),e.setRenderTarget(null),d},v=(e,t)=>e.r===t.r&&e.g===t.g&&e.b===t.b,p=()=>new o.FM8(window.innerWidth*a.DPR,window.innerHeight*a.DPR),h=(e,t,n)=>((e=e.clone()).getHSL(e),e.offsetHSL(0,t*e.s,n),e),g=(e,t)=>{let n=[];for(let o=0;o<t;o++){let i=(o+1)/t*Math.PI*2,a=e*Math.cos(i),s=e*Math.sin(i);n.push([a,s])}return n};function x(e,t=[0,0]){let n=e*Math.sqrt(l.randomNum(0,1)),o=2*l.randomNum(0,1)*Math.PI,i=n*Math.cos(o),a=n*Math.sin(o);return[i+t[0],a+t[1]]}function y(e,t,n){return t+(n-t)*e}function w(e){let t,n,o=[];for(t in e)for(n=0;n<100*e[t];n++)o.push(t);return function(){return o[Math.floor(l.randomNum(0,1)*o.length)]}}const b="\nvec2 _uv = vUv;\nvec4 p = vec4(vPosition*0.12-.22, 1.0);\nvec4 p1 = vec4(vPosition*0.07+.8, 1.0);\nvec4 p2 = vec4(vPosition*0.02, 1.0);\nvec4 p3 = vec4(vPosition*0.07, 1.0);\n\n//add spots to noise\nfloat noise3 = fbm(p, 6);\nfloat spots = max(snoise(p1), 0.);\nspots = mix(1.0, spots, .7);\nnoise3*= spots;\n\nfloat noise = texture2D(bumpMap, screenUV()).r;\nfloat noise2 = fbm(p2, 2);\nfloat adjustedNoise = mix((vec4(noise3)).r, 1.0, .5)*1.4;\nfloat smoothCurve = smoothstep(0.3, 1.0, vCurvature.r);\nfloat cGradient = curveGradient(vUv, 0.0, param2);\nfloat squareWave = squareWaveGradient(vUv, .0, 2.0);\n\nfloat rustMask = (1.0 -smoothCurve)*adjustedNoise*param1;\nfloat wornMetalMask = (noise3*.28 +noise2*.9)*param1;\ndiffuseColor = mix(diffuseColor,vec4(diffuse2,1.0), wornMetalMask);\ndiffuseColor = mix(diffuseColor,vec4(diffuse3,1.0), (1.0-cGradient));\ndiffuseColor = mix(diffuseColor,vec4(diffuse4,1.0),rustMask*.8);\n// diffuseColor = mix(diffuseColor,vec4(diffuse2,1.0), squareWave);\n\nfloat roughnessMask = max(rustMask+wornMetalMask, .6);\nfloat metalnessMask = max(1.0-(rustMask+wornMetalMask*.2), .9);\n//float adjustedNoise2 = smoothstep(0.2,0.6, noise2);\n",_="\n#define F4 0.309016994374947451\n\nvec3 mod289(vec3 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nfloat mod289(float x) {\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x)\n{\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat permute(float x) {\n    return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat taylorInvSqrt(float r)\n{\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec3 fade(vec3 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\nvec4 grad4(float j, vec4 ip)\n{\n    const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\n    vec4 p,s;\n\n    p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\n    p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\n    s = vec4(lessThan(p, vec4(0.0)));\n    p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\n\n    return p;\n}\n",M="\nfloat snoise(vec4 v)\n{\n    const vec4  C = vec4( 0.138196601125011,  // (5 - sqrt(5))/20  G4\n    0.276393202250021,  // 2 * G4\n    0.414589803375032,  // 3 * G4\n    -0.447213595499958); // -1 + 4 * G4\n\n    // First corner\n    vec4 i  = floor(v + dot(v, vec4(F4)) );\n    vec4 x0 = v -   i + dot(i, C.xxxx);\n\n    // Other corners\n\n    // Rank sorting originally contributed by Bill Licea-Kane, AMD (formerly ATI)\n    vec4 i0;\n    vec3 isX = step( x0.yzw, x0.xxx );\n    vec3 isYZ = step( x0.zww, x0.yyz );\n    //  i0.x = dot( isX, vec3( 1.0 ) );\n    i0.x = isX.x + isX.y + isX.z;\n    i0.yzw = 1.0 - isX;\n    //  i0.y += dot( isYZ.xy, vec2( 1.0 ) );\n    i0.y += isYZ.x + isYZ.y;\n    i0.zw += 1.0 - isYZ.xy;\n    i0.z += isYZ.z;\n    i0.w += 1.0 - isYZ.z;\n\n    // i0 now contains the unique values 0,1,2,3 in each channel\n    vec4 i3 = clamp( i0, 0.0, 1.0 );\n    vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\n    vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\n\n    //  x0 = x0 - 0.0 + 0.0 * C.xxxx\n    //  x1 = x0 - i1  + 1.0 * C.xxxx\n    //  x2 = x0 - i2  + 2.0 * C.xxxx\n    //  x3 = x0 - i3  + 3.0 * C.xxxx\n    //  x4 = x0 - 1.0 + 4.0 * C.xxxx\n    vec4 x1 = x0 - i1 + C.xxxx;\n    vec4 x2 = x0 - i2 + C.yyyy;\n    vec4 x3 = x0 - i3 + C.zzzz;\n    vec4 x4 = x0 + C.wwww;\n\n    // Permutations\n    i = mod289(i);\n    float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\n    vec4 j1 = permute( permute( permute( permute (\n    i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\n    + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\n    + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\n    + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\n\n    // Gradients: 7x7x6 points over a cube, mapped onto a 4-cross polytope\n    // 7*7*6 = 294, which is close to the ring size 17*17 = 289.\n    vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\n\n    vec4 p0 = grad4(j0,   ip);\n    vec4 p1 = grad4(j1.x, ip);\n    vec4 p2 = grad4(j1.y, ip);\n    vec4 p3 = grad4(j1.z, ip);\n    vec4 p4 = grad4(j1.w, ip);\n\n    // Normalise gradients\n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n    p0 *= norm.x;\n    p1 *= norm.y;\n    p2 *= norm.z;\n    p3 *= norm.w;\n    p4 *= taylorInvSqrt(dot(p4,p4));\n\n    // Mix contributions from the five corners\n    vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\n    vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\n    m0 = m0 * m0;\n    m1 = m1 * m1;\n    return 49.0 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\n    + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\n\n}\n\nfloat fbm(vec4 p, int detail) {\n    float sum = 0.0;\n    float amp = 1.;\n    float _scale = 1.0;\n\n    for(int i =0; i<detail; i++) {\n       sum += snoise(p*_scale)*amp;\n        p.w += 100.0;\n        amp *=0.9;\n        _scale *= 2.0;\n    }\n\n    return sum;\n}\n",S="\n\nfloat squareWaveGradient(vec2 vUv, float offset, float repeats){\n    vec2 st = vUv;\n    float m = sin(vUv.y * 1.0 );\n    return abs(fract(vUv.y*repeats  +offset) - 0.5) * 2.0;\n}\n",P="\n#define M_PI 3.1415926535897932384626433832795\n\nvec4 FourColorGradient(vec2 vUv, float xMin, float xMax, float yMin, float yMax)\n{\n    vec2 P0 = vec2(xMin, yMax);\n    vec2 P1 = vec2(xMax, yMax);\n    vec2 P2 = vec2(xMin, yMin);\n    vec2 P3 = vec2(xMax, yMin);\n    \n    //Example colors.  In practise these would be passed in\n    // as parameters\n    vec2 uv = vUv;\n    uv*= 1.0;\n    float index= 0.0;\n    index = step(1.0, mod(uv.y, 2.0));\n    index += step(1., mod(uv.x,2.0))*2.0;\n\n\n    if (index ==1.0) {\n        uv.x = 1.0 -uv.x;\n    } else if (index ==2.0) {\n        uv.y = 1.0 -uv.y;\n    } else if (index ==0.0) {\n        uv = 1.0-uv;\n\n    }\n    uv = fract(uv);\n\n    //Example coordinates.  In practise these would be passed in\n    // as parameters\n\n    vec2 Q = P0 - P2;\n    vec2 R = P1 - P0;\n    vec2 S = R + P2 - P3;\n    vec2 T = P0 - uv;\n\n    float u;\n    float t;\n\n    if(Q.x == 0.0 && S.x == 0.0) {\n        u = -T.x/R.x;\n        t = (T.y + u*R.y) / (Q.y + u*S.y);\n    } else if(Q.y == 0.0 && S.y == 0.0) {\n        u = -T.y/R.y;\n        t = (T.x + u*R.x) / (Q.x + u*S.x);\n    } else {\n        float A = S.x * R.y - R.x * S.y;\n        float B = S.x * T.y - T.x * S.y + Q.x*R.y - R.x*Q.y;\n        float C = Q.x * T.y - T.x * Q.y;\n        // Solve Au^2 + Bu + C = 0\n        if(abs(A) < 0.0001)\n        u = -C/B;\n        else {\n            u = (-B+sqrt(B*B-4.0*A*C))/(2.0*A);\n            t = (T.y + u*R.y) / (Q.y + u*S.y);\n\n        }\n    }\n    u = clamp(u,0.0,1.0);\n    t = clamp(t,0.0,1.0);\n\n    // These two lines smooth out t and u to avoid visual 'lines' at the boundaries.  They can be removed to improve performance at the cost of graphics quality.\n    t = smoothstep(0.0, 1.0, t);\n    u = smoothstep(0.0, 1.0, u);\n\n    vec4 colorA = mix(vec4(diffuse4,1.0),vec4(diffuse2, 1.0),u);\n    vec4 colorB = mix(vec4(diffuse3, 1.0),vec4(diffuse4, 1.0),u);\n    return mix(colorA, colorB, t);\n}\n\n",C="\n#define USE_METALNESSMAP\n#define USE_ROUGHNESSMAP\n#define USE_SCREEN_UV\n#define USE_ENVMAP\n#define ENVMAP_MODE_REFLECTION\n#define ENV_WORLDPOS\n#define ENVMAP_TYPE_CUBE\n#define ENVMAP_BLENDING_MULTIPLY\n#define USE_UV\n#define USE_BUMPMAP\nvarying vec3 vCurvature;\nvarying vec3 vPosition;\nvarying float vHeight;\n",F="\nfloat curveGradient(vec2 vUv, float time, float yOffset){\n  float grad =vUv.y + sin(vUv.x*3.0+time) / 10.0-yOffset;\n  grad = smoothstep(0.2,0.4,grad);\n  return grad;\n}\n",z="\nuniform vec2 resolution;\nvec2 screenUV(){\n    return ( vec2( gl_FragCoord.xy ) - vec2( 0.5 ) )/vec2(resolution.x,resolution.y);\n}\n",E="\nvec4 envMapTexelToLinear( vec4 a ) { return a; }\n",N={time:0,maxPlatformHeight:0,minPlatformHeight:0,averageTowerX:0,averageTowerZ:0,maxTowerHeight:0,fullScreenRes:{width:0,height:0}},I="\nattribute vec3 curvature;\nvarying vec3 vCurvature;\nattribute float height;\nvarying float vHeight;\n#define USE_UV\n#define ENV_WORLDPOS\nvarying vec3 vWorldPosition;\nvarying vec3 eyePosition;\nvarying vec3 vPosition;\nvarying vec3 eyeNormal;\nvarying vec3 vPositionW;\nvarying vec3 vNormalW;\nvarying mat4 mvpMatrix;\n",D="\nmvpMatrix = modelViewMatrix * projectionMatrix;\neyePosition = (modelViewMatrix*vec4(position, 1.0)).xyz;\nvCurvature = curvature;\nmat3 normalMatrix = transpose(inverse(mat3(modelViewMatrix)));\neyeNormal = normalize(normalMatrix * normal);\nvPosition = position;\nvHeight = height;\nvPositionW = vec3( vec4( position, 1.0 ) * modelMatrix);\nvNormalW = normalize( vec3( vec4( normal, 0.0 ) * modelMatrix ) );\n",k=o.WdD.meshphysical_frag,T=o.WdD.meshphysical_vert.slice(0,o.WdD.meshphysical_vert.indexOf("#include <uv_vertex>")),R=o.WdD.meshphysical_vert.slice(o.WdD.meshphysical_vert.indexOf("#include <uv_vertex>"));class j{constructor(e,t){const n="void main",i="vec4 diffuseColor = vec4( diffuse, opacity );",a=k.split(n),s=(n+a[1]).split(i),r=s[0]+i,l=s[1],d=a[0];e.emissiveIntensity=isNaN(e.emissiveIntensity)?0:e.emissiveIntensity,e.isSpotLights=void 0===e.isSpotLights||e.isSpotLights;const c=function(e,t){let n=o.WdD.lights_fragment_begin;var i,a;return t||(n=(()=>{let e=o.WdD.lights_fragment_begin.split("\n");return e.splice(26,34),e.join("\n")})()),e&&(i=n,"RE_Direct( directLight, geometry, material, reflectedLight );",a=["RE_Direct( directLight, geometry, material, reflectedLight );","#if defined( USE_SUBSURFACE ) && defined( USE_UV )"," RE_Direct_Scattering(directLight, vUv, geometry, reflectedLight, noise);","#endif"].join("\n"),n=i.split("RE_Direct( directLight, geometry, material, reflectedLight );").join(a)),n}(e.isSubsurface,e.isSpotLights),u=0!==e.emissiveIntensity?"\n#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = vec4(1.0);\n\ttotalEmissiveRadiance = emissiveMask.rgb*emissiveIntensity;\n#endif\n":"",m=[C,e.isSubsurface?"#define USE_SUBSURFACE":"","#define USE_EMISSIVEMAP","uniform float time;","uniform vec3 diffuse2;","uniform vec3 diffuse3;","uniform float emissiveIntensity;","uniform vec3 diffuse4;","uniform float param1;","uniform float param2;","uniform float param3;","uniform float param4;"].join("\n"),f={...o.Vj0.physical.uniforms,diffuse:{value:e.diffuse},diffuse2:{value:e.diffuse2},diffuse3:{value:e.diffuse3},diffuse4:{value:e.diffuse4},roughness:{value:e.roughness},metalness:{value:e.metalness},time:{value:0},param1:{value:e.param1},param2:{value:e.param2},param3:{value:e.param3},param4:{value:e.param4},envMap:{value:e.environment},bumpMap:{value:e.bumpMap},resolution:{value:p()},emissiveIntensity:{value:e.emissiveIntensity},envMapIntensity:{value:e.envMapIntensity},bumpScale:{value:e.bumpScale},reflectivity:{value:e.reflectivity},isSubsurface:{value:1},thicknessMap:{value:e.thicknessMap},thicknessRepeat:{value:new o.FM8(1,1)},thicknessColor:{value:e.thicknessColor},thicknessDistortion:{value:e.thicknessDistortion},thicknessAmbient:{value:e.thicknessAmbient},thicknessAttenuation:{value:e.thicknessAttenuation},thicknessPower:{value:e.thicknessPower},thicknessScale:{value:e.thicknessScale}};return this.fragmentShader=[m,E,z,d.replace("#include <bumpmap_pars_fragment>","\n#ifdef USE_BUMPMAP\nuniform vec2 bumpRepeat;\nuniform sampler2D bumpMap;\nuniform float bumpScale;\n\nvec2 dHdxy_fwd() {\n    vec2 _uv = vUv*bumpRepeat;\n    #if defined(USE_SCREEN_UV)\n        _uv = screenUV();\n    #endif\n    vec2 dSTdx = dFdx( _uv );\n    vec2 dSTdy = dFdy( _uv );\n    float Hll = bumpScale * texture2D( bumpMap,  _uv).x;\n    float dBx = bumpScale * texture2D( bumpMap, _uv + dSTdx ).x - Hll;\n    float dBy = bumpScale * texture2D( bumpMap, _uv + dSTdy ).x - Hll;\n    return vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n    vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n    vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n    vec3 vN = surf_norm;\n    vec3 R1 = cross( vSigmaY, vN );\n    vec3 R2 = cross( vN, vSigmaX );\n    float fDet = dot( vSigmaX, R1 ) * faceDirection;\n    vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n    return normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif\n"),P,F,_,M,S,e.isSubsurface?"\nuniform sampler2D thicknessMap;\nuniform float thicknessPower;\nuniform float thicknessScale;\nuniform float thicknessDistortion;\nuniform float thicknessAmbient;\nuniform float thicknessAttenuation;\nuniform vec2 thicknessRepeat;\nvarying vec3 vPositionW;\nvarying vec3 vNormalW;\n\n\nvoid RE_Direct_Scattering(const in IncidentLight directLight, const in vec2 uv, const in GeometricContext geometry, inout ReflectedLight reflectedLight, float noise) {\n\n    vec3 viewDirectionW = normalize(vPositionW - cameraPosition);\n    vec3 thickness = diffuse2 *vCurvature*(mix(noise, 1.0, 0.9));\n    vec3 scatteringHalf = normalize(directLight.direction + (geometry.normal * thicknessDistortion));\n    float scatteringDot = pow(saturate(dot(geometry.viewDir, -scatteringHalf)), thicknessPower) * thicknessScale;\n    vec3 scatteringIllu = (scatteringDot + thicknessAmbient) * thickness;\n    reflectedLight.directDiffuse += scatteringIllu * thicknessAttenuation * directLight.color;\n}\n":"",r,t,l.replace("#include <emissivemap_fragment>",u).replace("#include <roughnessmap_fragment>","\nfloat roughnessFactor = roughness;\nroughnessFactor *= roughnessMask;\n").replace("#include <metalnessmap_fragment>","\nfloat metalnessFactor = metalness;\nmetalnessFactor *= metalnessMask;\n").replace("#include <lights_fragment_begin>",c)].join("\n"),this.vertexShader=[I,T,D,R].join("\n"),this.type=e.type,new o.jyz({uniforms:f,fragmentShader:this.fragmentShader,vertexShader:this.vertexShader,lights:!0})}}class U{constructor(e,t,n){return this.isSSSLight=n,this.stageLightIntensity=t,this.topLightIntensity=e,this}}class A{constructor(e,t,n,o){return this.dirLightIntensity=e,this.ambientIntensity=t,this.topLightIntensity=n,this.stageLightIntensity=o,this}}const B={day:{lightSettings:new A(.4,.3,.25,.25)},dusk:{lightSettings:new A(.3,.24,.4,1)},night:{lightSettings:new A(.1,.01,.7,.3)}},L={sss:{method:class{constructor(e){return e.roughness=1,e.metalness=1,e.thicknessDistortion=.1,e.envMapIntensity=.4,e.reflectivity=1,e.thicknessAmbient=2.3,e.isSubsurface=!0,e.isSpotLights=!1,e.thicknessAttenuation=.45,e.thicknessPower=.8,e.thicknessScale=9,e.diffuse=e.colors[0],e.diffuse2=e.colors[1],e.bumpScale=.15,new j(e,"\nvec2 _uv = vUv;\n#if defined(USE_SCREEN_UV)\n    _uv = screenUV();\n#endif\nvec4 p2 = vec4(vPosition*0.02, 1.0);\nvec4 p3 = vec4(vPosition*0.07, 1.0);\nfloat squareWave = squareWaveGradient(vUv, time*.2, 2.0);\nfloat noise = texture2D(bumpMap, screenUV()).r;\nfloat noise2 = fbm(p2, 2);\nfloat cGradient = curveGradient(vPosition.xy/100.0, time, 0.0);\nfloat adjustedNoise = mix((vec4(noise)).r, 1.0, .5);\nfloat smoothCurve = smoothstep(0.5, 1.0, vCurvature.r);\nfloat adjustedNoise2 = squareWave;\nfloat mask = (1.0 -(smoothCurve+squareWave));\ndiffuseColor = mix(diffuseColor,vec4(diffuse2,1.0),mask);\n\nfloat roughnessMask = min(max(adjustedNoise2, 0.2),.7);\nfloat metalnessMask = squareWave;\n")}},lightSettings:new U(0,0,!0)},sss2:{method:class{constructor(e){return e.roughness=1,e.metalness=1,e.thicknessDistortion=.1,e.envMapIntensity=1,e.reflectivity=1.1,e.thicknessAmbient=2.4,e.isSubsurface=!0,e.isSpotLights=!1,e.thicknessAttenuation=.33,e.param1=l.randomDec(),e.param2=l.randomNum(-2,2),e.thicknessPower=.7,e.thicknessScale=8,e.diffuse=e.colors[0],e.diffuse2=e.colors[1],e.bumpScale=.2,new j(e,"\nvec2 _uv = vUv;\n#if defined(USE_SCREEN_UV)\n    _uv = screenUV();\n#endif\nvec4 p2 = vec4(vPosition*0.02, 1.0);\nvec4 p3 = vec4(vPosition*0.07, 1.0);\nfloat squareWave = squareWaveGradient(vUv, time*param1, param2);\nfloat noise = texture2D(bumpMap, screenUV()).r;\nfloat noise2 = fbm(p2, 2);\n// float cGradient = curveGradient(vPosition.xy/100.0, time, 0.0);\nfloat adjustedNoise = mix((vec4(noise)).r, 1.0, .5);\nfloat smoothCurve = smoothstep(0.5, 1.0, vCurvature.r);\nfloat adjustedNoise2 = squareWave;\nfloat mask = (1.0 -(smoothCurve+squareWave));\ndiffuseColor = mix(diffuseColor,vec4(diffuse2,1.0),mask);\n\nfloat roughnessMask = min(max(adjustedNoise2, 0.2),.7);\nfloat metalnessMask = squareWave;\n")}},lightSettings:new U(0,0,!0)},metal:{method:class{constructor(e){const t=a.scene.isNight,n=a.tower.materialType,i=t?.45:.4,s=l.randomBias(i,.95,.9,1);let r=e.colors,d=new o.Ilk(.92,.92,.92),c=new o.Ilk(.32,.32,.32),u=r[2],m=new o.Ilk("#542303");const f=l.randomDec(),v=a.colorType;("multiColor"===v||"threeColor"===v&&f>.5)&&(d=r[0],c=r[1],u=r[2],m=r[3]),e.diffuse=d,e.diffuse2=c,e.diffuse3=u,e.diffuse4=m;let p=t?.14:l.randomNum(.5,.8);return e.envMapIntensity="mixed"===n?.6:p,e.param1=s,e.bumpScale=.05,e.param2=l.randomBias(0,.5,0,1),e.reflectivity=1,e.roughness=s,e.metalness=1,e.type="MetalMaterial",new j(e,b)}},lightSettings:new U(0,0,!1)},gold:{method:class{constructor(e){const t=a.scene.isNight,n=a.tower.materialType,i=t?.45:.4,s=l.randomBias(i,.95,.9,1);e.colors;let r=new o.Ilk("#EEBC1D"),d=new o.Ilk("#C39953"),c=d,u=new o.Ilk("#542303");e.diffuse=r,e.diffuse2=d,e.diffuse3=c,e.diffuse4=u;let m=t?.14:l.randomNum(.5,.8);return e.envMapIntensity="mixed"===n?.6:m,e.param1=s,e.bumpScale=.05,e.param2=l.randomBias(0,.5,0,1),e.reflectivity=1,e.roughness=s,e.metalness=1,e.type="GoldMaterial",new j(e,b)}},lightSettings:new U(0,.9,!1)},hue:{method:class{constructor(e){let t=e.colors;if(t[2].equals(t[3])){let e=t[3];t[3]=t[0],t[0]=e}if(t[0].equals(t[1])){let e=t[0];t[0]=t[2],t[2]=e}return e.diffuse=t[0],e.diffuse2=t[1],e.diffuse3=t[2],e.diffuse4=t[3],e.bumpScale=.05,e.roughness=.9,e.metalness=.6,e.envMapIntensity=1,e.emissiveIntensity=.5,e.isSpotLights=!0,new j(e,"\nvec2 _uv = vUv;\n#if defined(USE_SCREEN_UV)\n    _uv = screenUV();\n#endif\nvec4 p = vec4(vPosition*0.12-.22, 1.0);\n\n//add spots to noise\nfloat noise3 = fbm(p, 6);\n\nfloat smoothCurve = smoothstep(0.3, 1.0, vCurvature.r);\nfloat squareWave = squareWaveGradient(vUv, time*0.3, 2.0);\n\nfloat rustMask = (1.0 -smoothCurve);\nfloat wornMetalMask = noise3*.10;\ndiffuseColor = mix(vec4(diffuse3,1.0),vec4(diffuse2,1.0), rustMask);\ndiffuseColor = mix(diffuseColor,vec4(diffuse4,1.0),squareWave);\nfloat roughnessMask = 1.0;\nfloat metalnessMask = 0.0;\n\nvec4 emissiveMask = diffuseColor;\n\n")}},lightSettings:new U(0,0,!1)},stone:{method:class{constructor(e){return e.type="StoneMaterial",e.roughness=1,e.metalness=1,e.diffuse=new o.Ilk("#0c0c0c"),e.diffuse2=new o.Ilk("#5e5e5e"),e.param1=l.randomNum(0,.7),e.diffuse4=e.colors[0],e.isSpotlights=!0,e.param2=.4,e.envMapIntensity=.6,e.bumpScale=4,e.reflectivtiy=1,new j(e,"\nvec2 _uv = vUv;\n#if defined(USE_SCREEN_UV)\n    _uv = screenUV();\n#endif\nvec4 p = vec4(vPosition*0.12-.22, 1.0);\nvec4 p1 = vec4(vPosition*0.07+.8, 1.0);\nvec4 p2 = vec4(vPosition*0.02, 1.0);\nvec4 p3 = vec4(vPosition*0.07, 1.0);\n\n//add spots to noise\nfloat noise3 = fbm(p, 6);\nfloat spots = max(snoise(p1), 0.);\nspots = mix(1.0, spots, .7);\nnoise3*= spots;\n\nfloat noise = texture2D(bumpMap, screenUV()).r;\nfloat noise2 = fbm(p2, 2);\nfloat adjustedNoise = mix((vec4(noise3)).r, 1.0, .5)*1.4;\nfloat smoothCurve = smoothstep(0.1, 1.0, vCurvature.r);\nfloat cGradient = curveGradient(vUv, 0.0, param1);\nfloat cGradient2 = curveGradient(vUv, 0.0, -.25);\nfloat squareWave = squareWaveGradient(vUv, .0, 2.0);\n\nfloat rustMask = (1.0 -smoothCurve)*adjustedNoise;\nfloat wornMetalMask = noise3*.28 +noise2*.9;\n// diffuseColor = mix(diffuseColor,vec4(diffuse2,1.0), wornMetalMask);\nvec3 mossColorMask = mix(diffuse2, diffuse4, 1.0-cGradient);\nfloat mossMask = (1.0-cGradient)*noise+(cGradient)*noise*.4;\ndiffuseColor = mix(diffuseColor,vec4(diffuse4,1.0),(1.0-cGradient)*noise);\ndiffuseColor = mix(diffuseColor,vec4(diffuse4,1.0),rustMask);\ndiffuseColor = mix(diffuseColor,vec4(mossColorMask,1.0),smoothstep(0.0,0.8,noise));\ndiffuseColor = mix(diffuseColor,vec4(diffuse4,1.0),1.0-cGradient2);\n\nfloat roughnessMask = 1.0-(2.0*mossMask);\nroughnessMask = max(roughnessMask, param2);\n\nfloat metalnessMask = max((mossMask*2.0), .2);\n")}},lightSettings:new U(0,1,!1)},mixed:{lightSettings:new U(0,0,!0)}},K=(e,t,n,i,s,r,d,u,m,f,p)=>{c(g(s,i)).slice(0,n).forEach((n=>{let i=c(a.colors)[1];const s=h(i,-.5,0);i=l.randomDec()<d?i:s,v(i,new o.Ilk("white"))&&(i=new o.Ilk(.7,.7,.7));const g=new o.PMe(i),x=u?392:442,y=u?[n[0],0,n[1]]:[0,392,0];g.position.set(n[0],x,n[1]),g.intensity=f,g.penumbra=1,g.distance=r,G(t,g,m,f),e.add(g),g.target.position.set(...y),g.castShadow=p,g.shadow.mapSize.width=256,g.shadow.mapSize.height=256,e.add(g.target)}))},G=(e,t,n,o,i)=>{if(l.randomDec()<n){let n=10;t.frequency=n,t.amplitude=o,t.animType=w({strobe:.2,smooth:.8})(),i&&(t.animType=i),t.rand1=l.randomDec(),t.rand2=l.randomDec(),t.rand3=l.randomDec(),e.push(t)}};function W(e){const t=a.tower.materialType,n=[],i=a.time,s=a.modelHeight,r=L[t].lightSettings,l=B[a.time].lightSettings;let d=l.ambientIntensity,c=l.dirLightIntensity;const u=l.topLightIntensity+r.topLightIntensity,m=l.stageLightIntensity+r.stageLightIntensity,f="night"===i&&a.scene.isTerrain,v="dusk"===i,p=new o.cek(a.colors[0],.5,100,1);p.position.y=s/8+130,G(n,p,1,1.1,"smooth"),e.add(p);const g=new o.cek(h(a.colors[1],-.4,.5),.3,300,1);g.position.y=s/8+40,r.isSSSLight&&e.add(g),v&&K(e,n,3,6,100,1e3,.5,!0,.8,.4,!1),f&&K(e,n,4,6,3e3,0,1,!0,1,.8,!1),K(e,n,3,5,700,2e3,.5,!1,1,m,!1);const x=new o.Ox3(h(new o.Ilk("white"),-.1,.1),c),w=new o.PMe(a.colors[1]),b=s+100;w.position.set(0,b,0),w.penumbra=2,w.distance=1500,w.intensity=u,w.castShadow=!0,w.shadow.mapSize.width=256,w.shadow.mapSize.height=256,w.target.position.set(0,0,0);const _=new o.PMe(a.colors[2]);return _.position.set(400,b,-400),_.penumbra=2,_.distance=b+500,_.intensity=u,_.target.position.set(_.position.x,0,_.position.z),_.castShadow=!0,_.shadow.mapSize.width=256,_.shadow.mapSize.height=256,e.add(w),e.add(new o.Mig(new o.Ilk(d,d,d))),e.add(x),{update:function(e){let t,o;n.forEach((n=>{switch(n.animType){case"strobe":n.intensity=n.amplitude*Math.random();break;case"smooth":o=y(n.rand1,3,8),t=(Math.cos(e*o+100*n.rand2)+1)/2,n.intensity=n.amplitude*y(t,.3,1.1);break;case"pulse":t=((Math.cos(e*n.frequency*(1-n.rand2)+10*n.rand3)+1)*n.rand1+(Math.cos(e*n.frequency*n.rand3+10*n.rand2+20*n.rand3)+1)*(1-n.rand1))/2,n.intensity=minIntensity+(maxIntensity-minIntensity)*t}}))}}}var V=n(76),H=n.n(V),O=n(712),q=n.n(O),Q=n(450),Z=n.n(Q);function Y(e,t){let n=c(a.colors),i=(a.materials,l.randomNum(.02,.6));(e=>{let t=2;for(;v(e[0],e[1]);){let n=e[1];e[1]=e[t],e[t]=n,t++}})(n);let s=l.randomNum(0,.45),r=1-s,d=l.randomNum(0,.45),u=1-d,m={resolution:{value:{x:canvas.width,y:canvas.height}},time:{value:0},color0:{value:n[0]},color1:{value:n[1]},color2:{value:n[2]},color3:{value:n[3]},P0:{value:new o.FM8(s,u)},P1:{value:new o.FM8(r,u)},P2:{value:new o.FM8(s,d)},P3:{value:new o.FM8(r,d)},steps:{value:4}},f=w({gradient2:.9,gradient4:0})(),p={gradient2:q(),gradient4:Z()},h=new o.jyz({vertexShader:H(),fragmentShader:p[f],uniforms:m,side:o.ehD});const g=new o.xsS,x=512,y=new o.iKG(-256,256,256,-256,1,1e3);y.position.z=1;const b=new o._12(x,x),_=new o.Kj0(b,h);g.add(new o.Mig(8421504)),g.add(_);let M=new o.dd2(x,x);return M.texture.wrapS=M.texture.wrapT=o.OoA,M.texture.repeat.set(t,t),{target:M,update:()=>{M.texture.offset.set(0,N.time*i),e.setRenderTarget(M),e.render(g,y),e.setRenderTarget(null)}}}function X(){const e=(()=>{let e=new o.zf8(100,29),t=new o.Kj0(e,new o.vBJ);return t.position.y=40,t.rotation.x=-Math.PI/2,t})();return N.maxPlatformHeight+=40,N.minPlatformHeight=0,e}function J(e,t){const n=new o.vBJ({map:t.texture,side:o.ehD}),i=new o.oAp(128,{format:o.UCm,generateMipmaps:!0,minFilter:o.D1R,encoding:o.knz});t.texture.mapping=o.vxC;const a=new o.Kj0(new o.xo$(800,10,10),n),s=new o._am(1,1e5,i),r=new o.xsS;return r.add(a),{target:i,update:()=>{s.update(e,r)}}}class ${constructor(e){return this.params=e,this.build()}build(){const{parts:e,segments:t,smoothDy:n=0}=this.params;let i=[],a=0,s=0;for(let t=0;t<e.length;t++){const n=e[t],s=this.buildPartPoints(n,a);if(0!==t){const e=i[i.length-1],t=s[0];e.distanceTo(t)<.01&&s.shift()}if(n.smoothHeight&&i.length>0){const e=i[i.length-1],t=s[0],a=new o.FM8(e.x,e.y),r=new o.FM8;e.x<t.x?r.set(e.x,e.y+n.smoothHeight):r.set(t.x,e.y);const l=new o.FM8(t.x,e.y+n.smoothHeight),d=new o.ZQ6(a,r,l).getPoints(5);d.shift(),d.pop(),i=i.concat(d),s.forEach((e=>{e.y+=n.smoothHeight}))}i=i.concat(s),a=s[s.length-1].y}n>0&&(i=this.resamplePoints(i,n)),s=i[i.length-1].y;let r=new o.p7y(i,t);return r=this.computeCurvature(r,i),r.segments=t,r.height=s,r}computeCurvature(e,t){let n,i=new o.FM8,a=new o.FM8,s=[];for(n=1;n<t.length-1;n++)i.copy(t[n]).sub(t[n-1]),a.copy(t[n+1]).sub(t[n]),s[n]=Math.atan2(a.y,a.x)-Math.atan2(i.y,i.x),s[n]=Math.max(-1,Math.min(1,s[n]/2.34));s[n]=s[n-1],s[0]=s[1];let r={};for(n=0;n<t.length;n++)r[t[n].y.toFixed(3)]=s[n];const l=new Float32Array(e.attributes.position.array.length);for(let t=0;t<e.attributes.position.count;t++){const n=e.attributes.position.array,i=new o.Pa4(n[3*t],n[3*t+1],n[3*t+2]).y.toFixed(3);let a=r[i],s=r[i],d=parseFloat(i),c=parseFloat(i),u=0;for(;void 0===a;){const e=.001;u++,d+=e,c-=e,a=r[d.toFixed(3)],s=r[c.toFixed(3)],void 0!==s&&(a=s)}a=1+Math.min(0,a),l[3*t]=a,l[3*t+1]=a,l[3*t+2]=a}return e.setAttribute("curvature",new o.TlE(l,3)),e}resamplePoints(e,t){const n=(t,n)=>{for(let o=n;o<e.length-1;o++){const n=e[o],i=e[o+1];if(n.y<=t&&t<=i.y){const e=i.clone().sub(n),a=0!==e.y?(t-n.y)/e.y:0;return{point:n.clone().add(e.multiplyScalar(a)),index:o}}}return{point:e[e.length-1],index:e.length-1}},o=[],i=e[0].y,a=e[e.length-1].y,s=Math.ceil((a-i)/t)+1;let r=0;for(let e=0;e<s;e++){const{point:a,index:s}=n(i+e*t,r);r=s,o.push(a)}return o}buildPartPoints(e,t=0){let n=[];switch(e.type){case"bezier":n=this.buildBezierPartPoints(e,t);break;case"indented":n=this.buildIndentedPartPoints(e,t);break;case"round":n=this.buildRoundPartPoints(e,t);break;case"sharp":n=this.buildSharpPartPoints(e,t);break;case"sinus":n=this.buildSinusPartPoints(e,t);break;case"straight":n=this.buildStraightPartPoints(e,t);break;case"teardrop":n=this.buildTeardropPartPoints(e,t);break;default:console.error("Invalid part type "+e.type)}return n}buildBezierPartPoints(e,t=0){const{height:n,last:i,radius:a,endRadius:s,inverted:r=!1,segments:l=5}=e;let d=[];const c=new o.FM8(a,t),u=new o.FM8(a,t+n);r&&u.set(s,t);const m=new o.FM8(s,t+n);return d=new o.ZQ6(c,u,m).getPoints(l),i&&d.push(new o.FM8(0,d[d.length-1].y+.1)),d}buildIndentedPartPoints(e,t=0){const{height:n,radius:i,maxRadius:a,repeat:s,last:r}=e;let l=n/s+.5*s;const d=.5*l,c=d+.5*l,u=[new o.FM8(i,t)];for(let e=0;e<s;e++){const n=t+e*c;u.push(new o.FM8(a,n)),u.push(new o.FM8(a,n+d)),e!==s-1&&(u.push(new o.FM8(i,n+d)),u.push(new o.FM8(i,n+c)))}return r&&u.push(new o.FM8(0,u[u.length-1].y)),u}buildRoundPartPoints(e,t=0){const{height:n,minRadius:i,close:a}=e,s=Math.round(n+1),r=n/8,l=[],d=Math.PI/s;for(let e=0;e<=s;e++){const n=-Math.PI/2+e*d,a=i+r*Math.cos(n),s=t+r*(1+Math.sin(n));l.push(new o.FM8(a,s))}return i>0&&a&&l.push(new o.FM8(0,t+n)),l}buildSharpPartPoints(e,t=0){const{height:n,radius:i}=e,a=[],s=i/1,r=n/1;for(let e=0;e<=1;e++)a.push(new o.FM8(i-e*s,t+e*r));return a}buildSinusPartPoints(e,t=0){const{height:n,repeat:i,radius:a,last:s,maxRadius:r}=e,l=Math.round(3*i+1),d=[],c=r-a,u=n/l,m=Math.PI*i/l;for(let e=0;e<=l;e++){const n=a+Math.abs(Math.sin(e*m))*c,i=t+e*u;d.push(new o.FM8(n,i))}return s&&d.push(new o.FM8(0,t+n)),d}buildStraightPartPoints(e,t=0){const{height:n,radius:i,segments:a=1,close:s}=e,r=[],l=n/a,d=((e.endRadius??i)-i)/a;for(let e=0;e<=a;e++)r.push(new o.FM8(i+e*d,t+e*l));return s&&r.push(new o.FM8(0,t+n)),r}buildTeardropPartPoints(e,t=0){const{height:n,radius:i,maxRadius:a,minRadius:s}=e,r=Math.round(e.height+1),l=[];return l.push(new o.FM8(i,t)),l.push(new o.FM8(a,t+.3*n)),s>0?(l.push(new o.FM8(s,t+.9*n)),l.push(new o.FM8(0,t+n))):l.push(new o.FM8(s,t+n)),new o.gti(l).getPoints(r)}}function ee(){let e=a.tower,t=e.segments,n=e.numParts,o=e.isSinglePartSystem;const i=e.combined;let s=e.smoothing,r={tree:{parts:[{type:"round",last:!1},{type:"indented",last:!1},{type:"round",last:!1},{type:"indented",last:!0}],segments:9,smoothing:1},house:{parts:[{type:"straight",last:!1},{type:"sharp",last:!0}],segments:9,smoothing:1},tower1:{parts:[{type:"straight",last:!1},{type:"round",last:!1},{type:"teardrop",last:!0}],segments:9,smoothing:2}},d={},c=[l.randomNum(-20,20),l.randomNum(-20,20)],u=Math.sqrt(Math.pow(c[0],2)+Math.pow(c[1],2))/200+.5;const m=(e,t,n)=>new $({segments:t,parts:e,smoothDy:n}),f=(e,t)=>{let n=1-Math.sqrt(Math.pow(e[0]-c[0],2)+Math.pow(e[2]-c[1],2))/(200*u);return Math.min(150*n+6*(t-10)*n,180)};function v(e,t,n){let o=Object.assign({},e),i=e.parts,a=n/i.length;const s=t;let r=i.map((e=>{switch((e=Object.assign({},e)).height=a,e.type){case"indented":e.radius=s*l.randomNum(.2,.75),e.repeat=l.randomInt(1,5),e.maxRadius=e.radius+(l.randomNum(0,1)>.5?1:-1)*l.randomNum(.2,.3)*e.radius;break;case"round":e.minRadius=e.last?0:s*l.randomNum(.2,1),e.height=a;break;case"bezier":e.radius=s*l.randomNum(.4,1),e.endRadius=e.last?e.radius/3:s*l.randomNum(.3,.8),e.inverted=l.randomNum(0,1)>.5;break;case"sharp":e.radius=s*l.randomNum(.3,1);break;case"sinus":e.radius=s*l.randomNum(.7,1);let n=l.randomInt(2,9);t=n,n=0===(t=Number(t))||t&&!(t%2)?n+1:n,e.repeat=e.last?.5:n/2;let o=e.radius*l.randomNum(.35,.7);e.maxRadius=e.last?e.radius*l.randomNum(.1,.5):o;break;case"straight":e.radius=s*l.randomNum(.4,1);break;case"teardrop":e.radius=s,e.maxRadius=l.randomNum(.9*s,1*s),e.minRadius=0}var t;return e}));return o.parts=r,o.smoothing=e.smoothing,o}function p(){const e=l.randomInt(t.min,t.max);let a=l.randomInt(n.min,n.max);i&&l.randomDec()>.5&&(a=l.randomInt(1,3));let r=l.randomNum(s.min,s.max);const d=[];for(let e=0;e<a;e++){const t=e===a-1,n=o?["sharp","sinus","teardrop","bezier"]:["sharp","sharp","indented","sharp","sinus","teardrop","teardrop","bezier"],i=t?n:["bezier","round","sinus","straight","indented"];let s=i[l.randomInt(0,i.length-1)];!t&&l.randomNum(0,1)>.4&&(s="straight");const r={type:s};r.last=t,d.push(r)}return{parts:d,segments:e,numParts:a,smoothing:r}}return{createRandomTower:(e,t)=>{let n=v(p(),e,f(t,e));const o=n.segments,i=n.parts,a=n.smoothing;return m(i,o,a)},createPresetRandom:e=>{d[e]=p()},createPresetSaved:e=>{d[e]=r[e]},createTowerFromPreset:function(e,t,n,o=-1){Object.keys(d).length-Object.keys(r).length==1&&"string"!=typeof e&&(e=0),-1===o&&(o=f(n,t));let i=v(d[e],t,o);const a=i.smoothing;return m(i.parts,i.segments,a)}}}function te(e,t,n){let i=a.tower,s=i.numPresets,r=i.towerRotationsThreshold,d=i.towerRotationSpeed;const c=new o.vBJ,u=[];let m=0,f=0,v=[],p=0;const h=new ee;return(e=>{for(let t=0;t<e;t++)h.createPresetRandom(t)})(s),t.forEach((t=>{let n=t.center,i=t.radius,g=t.group,x=n[0],y=n[2],w=n[1],b=l.randomInt(0,s-1),_=h.createTowerFromPreset(b,i,n);3===g&&(_=h.createTowerFromPreset(b,i,n,80)),4===g&&(_=h.createTowerFromPreset(b,i,n,130)),m>f&&(f=m);const M=new o.Kj0(_,c);p+=1,M.random=l.randomNum(-d,d),M.position.x=x,M.position.y=w,M.position.z=y,m=_.height+w-a.scene.baseHeight,M.layers.toggle(1),M.name="Tower",e.add(M),u.push(M),_.segments<r&&(M.animated=!0),v.push({x,y:w,z:y,radius:i,height:m})})),N.maxTowerHeight=f,{update:()=>{u.forEach((e=>{e.animated&&(e.rotation.y=N.time*e.random)}))},data:v,towers:u}}var ne=n(149),oe=n.n(ne),ie=n(403),ae=n.n(ie);function se(e){a.materials;let t={resolution:{value:{x:canvas.width,y:canvas.height}},time:{value:0},offset:{value:l.randomNum(0,0)},steps:{value:4},repeats:{value:new o.FM8(1,1)}},n=new o.jyz({vertexShader:ae(),fragmentShader:oe(),uniforms:t,side:o.ehD});return{target:f(e,n,512,3),update:()=>{}}}var re=n(365),le=n(840),de=n.n(le);function ce(e,t,n,i,s,r,d){a.materials;const c=l.randomNum(.02,.1);let u={tex:{value:t.texture},hueVal:{value:n},brightness:{value:i},saturation:{value:s},contrast:{value:r}},m=new o.jyz({vertexShader:H(),fragmentShader:de(),uniforms:u});const f=new o.xsS,v=512,p=new o.iKG(-256,256,256,-256,1,1e3);p.position.z=1;const h=new o._12(v,v),g=new o.Kj0(h,m);f.add(g);let x=new o.dd2(v,v);return x.texture.wrapS=x.texture.wrapT=o.OoA,x.texture.repeat.set(d,d),{target:x,update:()=>{x.texture.offset.set(0,N.time*c*4),e.setRenderTarget(x),e.render(f,p),e.setRenderTarget(null)}}}function ue(){const e=a.tower,t=[],n=(w({metal:.33,stone:0,sss:.33,hue:.34})(),(t,n,i,a)=>{t=o(e.materialType);const s={colors:a,bumpMap:i,environment:n};return new L[t].method(s)}),o=e=>"mixed"!==e?e:e=w({sss:.6,sss2:.4})();return{update:()=>{t.forEach((e=>{e.uniforms.time.value=N.time}))},setup:(o,i)=>{const s=a.colorType;let r=l.randomDec()>0,d=e.materialType;"hue"===d&&"monochrome"!==s&&(r=l.randomDec()>.3),i.forEach((e=>{let i=a.colors;"hue"===d&&"monochrome"!==s&&"twoColor"!==s&&(i=c(i)),"hue"===d&&"monochrome"===s&&"hue"===d&&"twoColor"===s||("sss"===d&&(i=c(i)),!r||"metal"===d&&"monochrome"===s||(i=c(i))),e.material=n(d,o.environment,o.noise.texture,i,o.gradient),t.push(e.material)}))},getMaterial:n,onWindowResize:()=>{t.forEach((e=>{e.uniforms.resolution.value=p()}))}}}function me(e,t,n,i){const s=a.tower.materialType,r=new ue;let l=new $({segments:20,parts:[{type:"sinus",height:i,radius:t,maxRadius:t+3,repeat:3,segments:60,last:!0}],smoothDy:0});const d=new o.Kj0(l,r.getMaterial(s,e.environment,e.noise,a.colors));let c=!0;return d.layers.toggle(1),d.position.set(n[0],n[1],n[2]),d.name="tower",e.add(d),{update:()=>{c&&(d.material=r.getMaterial(s,e.environment,e.noise,a.colors),c=!1)},mesh:d}}function fe(e={}){const t=d(e.bounds,1),n=d(e.packAttempts,500),o=d(e.maxCount,1e3),i=e.sample||function(){const e=[];for(let n=0;n<a;n++)e.push((2*s()-1)*t);return e},a=d(e.dimensions,3),s=e.random||(()=>rand.randomNum(0,1)());let r;if(r=!1===e.outside?null:e.outside||function(e,n,o){const i=Math.abs(t);for(let t=0;t<e.length;t++){const o=e[t];if(Math.abs(o+n)>=i||Math.abs(o-n)>=i)return!0}return!1},2!==a&&3!==a)throw new Error("Dimensions must be 2 or 3");const l=[];for(let e=0;e<o;e++){const e=c();e&&l.push(e)}return l;function d(e,t){return null!=e?e:t}function c(){let e;for(let t=0;t<n&&(e=m(),!e);t++);if(!e)return!1;let t=e.minRadius;if(e.radiusGrowth>0){let n=0;for(;t<e.maxRadius&&n<e.maxGrowthSteps;){const o=t+e.radiusGrowth;if(f(e.position,o,e.padding))break;t=o,n++}}return e.radius=Math.min(e.maxRadius,t),e}function u(e,t){let n=d(e,t);return"function"==typeof n?n():n}function m(){const t=u(e.maxRadius,.5),n=u(e.radiusGrowth,.01),o=u(e.maxGrowthSteps,1/0),a=i(),s=u(e.minRadius,.01),r=u(e.padding,0);return!f(a,s,r)&&{maxGrowthSteps:o,minRadius:s,maxRadius:t,radiusGrowth:n,position:a,padding:r}}function f(e,t,n){return!(!r||!r(e,t,n))||l.some((o=>function(e,t,n,o){const i=t+o,a=i*i;return function(e,t){let n=0;for(let o=0;o<e.length;o++){const i=e[o]-t[o];n+=i*i}return n}(e,n)<a}(e,t+n,o.position,o.radius+o.padding)))}}function ve(e,t){const n=a.tower,i=n.maxCount,s=n.maxRadius,r=n.minRadius,d=n.padding,c=n.packAttempts,u=new o.iMs;let m=function(){const e={1:1,2:.5,3:1/(1+2/Math.sqrt(3)),4:1/(1+Math.sqrt(2)),5:1/(1+Math.sqrt(2*(1+1/Math.sqrt(5)))),6:1/3,7:1/3,8:1/(1+1/Math.sin(Math.PI/7)),9:1/(1+Math.sqrt(2*(2+Math.sqrt(2)))),12:1/4.029029},t={1:{n:1,outerPadding:3.1,outerR:1},2:{n:2,outerPadding:1.1,outerR:1},3:{n:3,outerPadding:2.1,outerR:1.04},4:{n:4,outerPadding:3.1,outerR:1.04},5:{n:5,outerPadding:1.2,outerR:1},6:{n:6,outerPadding:1.2,outerR:1},7:{n:6,outerPadding:3,innerPadding:8.3,innerR:.7,outerR:1.08},8:{n:7,outerPadding:2,innerPadding:8.3,innerR:.6,outerR:1.04},9:{n:8,outerPadding:3,innerPadding:4.2,innerR:.6,outerR:1.09},10:{n:8,outerPadding:3,innerPadding:1.2,innerR:.6,outerR:1.14},11:{n:8,outerPadding:4,innerPadding:.9,innerR:.63,outerR:1.15},12:{n:9,outerPadding:3,innerPadding:.9,innerR:.6,outerR:1.09}},n=(t,n,o,i,a,s)=>{let r=e[o],l=g(n*(1-r),o),d=n*r-n*i;l.forEach((e=>{t.push({position:[e[0]+s[0],e[1]+s[1]],radius:d,group:a})}))};return{create:(e,o,i)=>{let a=[],s=t[o].n,r=t[o].outerPadding,l=t[o].innerPadding,d=t[o].innerR,c=t[o].outerR;return n(a,e*c,s,.05*r,3,i),s!==o&&n(a,e*d,o-s,.05*l,4,i),a}}}();const f=(e,t,n,i)=>{for(let a=0;a<8;a++){let s=Math.PI*(a/4),r=e[0]+t*Math.cos(s),l=e[1]+t*Math.sin(s);const d=new o.Pa4(r,n,l);if(u.set(d,new o.Pa4(0,1,0)),u.intersectObject(i).length%2==1)return!0}return!1};return[...(()=>{let e=[];return t.forEach((t=>{let n=t.bounding.geometry.parameters.radiusTop,o=t.bounding.geometry.parameters.height,i=[t.bounding.position.x,t.bounding.position.y+o/2,t.bounding.position.z],a=l.randomInt(8,12),s=m.create(n,a,[0,0]).map((e=>({center:[e.position[0]+i[0],t.bounding.position.y+o/2,e.position[1]+i[2]],radius:e.radius,group:e.group})));e=[...e,...s]})),e})(),...(()=>{let n=[];const o=t,a=e.geometry.parameters.radius,u=e.position;return fe({dimensions:2,maxCount:l.randomInt(i.min,i.max),minRadius:l.randomNum(r.min,r.max),maxRadius:l.randomNum(s.min,s.max),padding:l.randomNum(d.min,d.max),packAttempts:c,bounds:a,sample:()=>x(a,[u.x,u.z]),outside:(e,t)=>{let n;for(let n=0;n<o.length;n++){let i=f(e,t,u.y+.01,o[n].bounding);if(i)return i}return n=Math.sqrt(Math.pow(e[0]-u.x,2)+Math.pow(e[1]-u.z,2))+t>=a-10,n}}).forEach((e=>{let t=function(e){return Math.floor(99*e.radius)+e.group}({radius:e.radius,group:1}),o={center:[e.position[0],40,e.position[1]],radius:e.radius,group:1,key:t};n.push(o)})),n})()]}function pe(e,t){let n=[];const i=l.randomNum(8,40),a=new o.YBo({envMap:e.environment,color:new o.Ilk(1,1,1),side:o.ehD}),s=(e,t,n)=>{let s=new o.fHI(e,e,n,29),r=new o.Kj0(s,a);return r.position.set(t[0],n/2+i,t[2]),r.updateMatrixWorld(),r};let r=0;return t.forEach((t=>{if("platform"===t.type){let o=t.radius,a=l.randomInt(20,50);r=a>r?r:a;let d=[t.position[0],i,t.position[2]];n.push({bounding:s(o,t.position,a),mesh:me(e,o,d,a)})}})),{data:n,update:()=>{n.forEach((e=>{e.mesh.update()}))}}}function he(e){let t=w({0:.5,1:.25,2:.25})(),n=e.geometry.parameters.radius;return fe({dimensions:2,maxCount:t,minRadius:10,maxRadius:30,packAttempts:1,bounds:n,sample:()=>x(n),outside:(e,t)=>{let o;return o=Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2))+t>=n-30,o}}).map((e=>(e.type="platform",e)))}class ge{constructor(e,t){a.tower.materialType;let n=t;return 1===n.length?(n.push("white"),n=[...n,...n]):2===n.length?n=[...n,...n]:3===n.length&&(n=[...n,c(n)[0]]),this.name=e,this.colors=n.map((e=>new o.Ilk(e))),this}}function xe(e,t){const n={};return n.trait_type=e,n.value=t,n}n(268);class ye{constructor(e){return this.name=e,this.build()}build(){let e=this.state[this.name];const t=new o.u9r;return t.setAttribute("normal",new o.a$l(e.normals,3)),t.setAttribute("position",new o.a$l(e.vertices,3)),t}state={star:{vertices:[6.4685,-2.10175,2.05611e-7,14.2658,4.63526,4.53461e-7,967978e-11,0,-3,-13468e-9,-6.8014,-428101e-18,8.81676,-12.1353,2.80254e-7,967978e-11,0,-3,3.99775,5.50245,1.27075e-7,-155719e-10,15,-494977e-18,967978e-11,0,-3,-6.46853,-2.10175,-2.05612e-7,-8.81679,-12.1353,-2.80255e-7,967978e-11,0,-3,-3.99778,5.50246,-1.27075e-7,-14.2659,4.63526,-4.53462e-7,967978e-11,0,-3,948906e-11,0,3,6.4685,-2.10175,2.05611e-7,8.81676,-12.1353,2.80254e-7,948906e-11,0,3,3.99775,5.50245,1.27075e-7,14.2658,4.63526,4.53461e-7,948906e-11,0,3,-13468e-9,-6.8014,-428101e-18,-8.81679,-12.1353,-2.80255e-7,948906e-11,0,3,-6.46853,-2.10175,-2.05612e-7,-14.2659,4.63526,-4.53462e-7,948906e-11,0,3,-3.99778,5.50246,-1.27075e-7,-155719e-10,15,-494977e-18,8.81676,-12.1353,2.80254e-7,6.4685,-2.10175,2.05611e-7,967978e-11,0,-3,14.2658,4.63526,4.53461e-7,3.99775,5.50245,1.27075e-7,967978e-11,0,-3,-8.81679,-12.1353,-2.80255e-7,-13468e-9,-6.8014,-428101e-18,967978e-11,0,-3,-14.2659,4.63526,-4.53462e-7,-6.46853,-2.10175,-2.05612e-7,967978e-11,0,-3,-155719e-10,15,-494977e-18,-3.99778,5.50246,-1.27075e-7,967978e-11,0,-3,948906e-11,0,3,14.2658,4.63526,4.53461e-7,6.4685,-2.10175,2.05611e-7,948906e-11,0,3,8.81676,-12.1353,2.80254e-7,-13468e-9,-6.8014,-428101e-18,948906e-11,0,3,-155719e-10,15,-494977e-18,3.99775,5.50245,1.27075e-7,948906e-11,0,3,-8.81679,-12.1353,-2.80255e-7,-6.46853,-2.10175,-2.05612e-7,948906e-11,0,3,-14.2659,4.63526,-4.53462e-7,-3.99778,5.50246,-1.27075e-7],uvs:[.635303,.689315,1,.715921,.525732,.47427,.355069,.644931,.442463,1,.525732,.47427,.764112,.436513,.902113,.0978871,.525732,.47427,.310685,.364697,3.38417e-8,.557537,.525732,.47427,.563487,.235888,.284079,0,.525732,.47427,.525732,.47427,.635303,.689315,.442463,1,.525732,.47427,.764112,.436513,1,.715921,.525732,.47427,.355069,.644931,3.38417e-8,.557537,.525732,.47427,.310685,.364697,.284079,0,.525732,.47427,.563487,.235888,.902113,.0978871,1,.557537,.689315,.364697,.47427,.474268,.715921,0,.436513,.235888,.47427,.474268,.557537,1,.644931,.644931,.47427,.474268,0,.715921,.364697,.689315,.47427,.474268,.0978871,.0978872,.235888,.436513,.47427,.474268,.47427,.474268,.715921,0,.689315,.364697,.47427,.474268,1,.557537,.644931,.644931,.47427,.474268,.0978871,.0978872,.436513,.235888,.47427,.474268,.557537,1,.364697,.689315,.47427,.474268,0,.715921,.235888,.436513],normals:[.38382,-.124711,-.914948,.186518,.060603,-.980581,8.20213e-7,-8.71765e-8,-1,3.75802e-7,-.403571,-.914948,.115275,-.158661,-.980581,8.20213e-7,-8.71765e-8,-1,.237214,.326496,-.914948,144665e-11,.196116,-.980581,8.20213e-7,-8.71765e-8,-1,-.383818,-.12471,-.914949,-.115273,-.158662,-.980581,8.20213e-7,-8.71765e-8,-1,-.237212,.326495,-.914949,-.186517,.0606033,-.980581,8.20213e-7,-8.71765e-8,-1,7.46449e-7,-8.38236e-8,1,.38382,-.124711,.914948,.115275,-.158661,.980581,7.46449e-7,-8.38236e-8,1,.237213,.326496,.914948,.186518,.0606031,.980581,7.46449e-7,-8.38236e-8,1,3.29785e-7,-.403571,.914948,-.115273,-.158662,.980581,7.46449e-7,-8.38236e-8,1,-.383818,-.12471,.914949,-.186517,.0606033,.980581,7.46449e-7,-8.38236e-8,1,-.237212,.326495,.914949,136445e-11,.196116,.980581,.115275,-.158661,-.980581,.38382,-.124711,-.914948,8.20213e-7,-8.71765e-8,-1,.186518,.060603,-.980581,.237214,.326496,-.914948,8.20213e-7,-8.71765e-8,-1,-.115273,-.158662,-.980581,3.75802e-7,-.403571,-.914948,8.20213e-7,-8.71765e-8,-1,-.186517,.0606033,-.980581,-.383818,-.12471,-.914949,8.20213e-7,-8.71765e-8,-1,144665e-11,.196116,-.980581,-.237212,.326495,-.914949,8.20213e-7,-8.71765e-8,-1,7.46449e-7,-8.38236e-8,1,.186518,.0606031,.980581,.38382,-.124711,.914948,7.46449e-7,-8.38236e-8,1,.115275,-.158661,.980581,3.29785e-7,-.403571,.914948,7.46449e-7,-8.38236e-8,1,136445e-11,.196116,.980581,.237213,.326496,.914948,7.46449e-7,-8.38236e-8,1,-.115273,-.158662,.980581,-.383818,-.12471,.914949,7.46449e-7,-8.38236e-8,1,-.186517,.0606033,.980581,-.237212,.326495,.914949]}}}function we(e,t,n,i){let a=l.randomNum(0,1);const s=new o.ZAu;let r=function(e,t,n,o,i=[0,0,0]){let a=g(e,13),s=[];return a.forEach(((e,n)=>{n%n!=0&&((o=o.clone()).position.set(e[0]+i[0],i[1],e[1]+i[2]),o.scale.set(t,t,t),s.push(o))})),s}(110+10*a,.4,0,t,n);return r.forEach((e=>{s.add(e)})),e.add(s),{update:()=>{r.forEach((e=>{e.rotation.y=N.time*(1+2*a)})),s.rotation.y=.5*N.time*a+360*a}}}function be(e){const t=a.colors;let n=[];const i=new ye("star"),s=(new o.EJi({envMap:e.environment,metalness:0,emissiveIntensity:.3,envMapIntensity:.4,emissive:h(t[3],2,0),roughness:a.scene.isNight?0:.4,color:t[0],side:o.ehD}),a.scene.isNight?l.randomBias(5,14,4,1):l.randomBias(1,5,1,1));let r=parseInt(s),d=l.randomNum(50,N.maxTowerHeight/2),u=l.randomNum(d,N.maxTowerHeight),m=u-d;if(0!==r)for(let a=d,s=0;a<=u;a+=m/r,s++){const r=new o.EJi({envMap:e.environment,metalness:0,emissiveIntensity:.8,envMapIntensity:.5,emissive:h(t[3],3,0),roughness:.4,color:t[0],side:o.ehD});r.emissive=c(t)[1];let l=new o.Kj0(i,r);n.push(new we(e,l,[0,a+60,0],s))}return{update:()=>{n.forEach((e=>{e.update()}))}}}function _e(e,t){const n=new o.vBJ({color:new o.Ilk(.9,.9,.9),map:t.texture,side:o.ehD}),i=new o.Kj0(new o.xo$(4400,30,10),n);e.add(i)}var Me=n(458),Se=n(786),Pe=n(154),Ce=n(511),Fe=n.n(Ce),ze=n(531),Ee=n(835),Ne=n.n(Ee);const Ie={vertexShader:Ne(),fragmentShader:["varying vec2 vUv;","varying vec3 vPosition;","varying vec3 vNormalW;","varying vec3 vNormal;","uniform float scale;","uniform int detail;","uniform bool isSpots;","uniform float offset;",_,M,"\nvoid main() {\n    vec4 p = vec4(vPosition*scale+vec3(offset), 1.0);\n    vec4 p1 = vec4(vPosition*(scale/2.0)-vec3(offset), 1.0);\n    float noisy = fbm(p, detail);\n    float spots = smoothstep(0.0,1.0, max(snoise(p1), 0.));\n    spots = mix(1.0, spots, .7);\n    gl_FragColor = vec4(vec3(noisy),1.0);\n    gl_FragColor *=vec4(vec3(spots), 1.0);\n}\n"].join("\n")};function De(e,t,n){new o.xsS;const i=a.tower.materialType,s=new o.jyz({uniforms:{scale:{value:l.randomNum(0,2)},detail:{value:l.randomInt(1,7)},offset:{value:l.randomNum(0,1e3)},isSpots:{value:!0}},fragmentShader:Ie.fragmentShader,vertexShader:Ie.vertexShader}),r=new o.jyz({fragmentShader:Fe(),vertexShader:Ie.vertexShader});(new o.xsS).background=new o.Ilk("black");const d="stone"===i?r:s;let c=new Me.C(e,t,d);const u=new Se.xC(n);u.renderToScreen=!1;const m=new ze.T(Pe.C);return u.addPass(c),u.addPass(m),N.fullScreenRes.width=u.readBuffer.width,N.fullScreenRes.height=u.readBuffer.height,{update:()=>{t.layers.disableAll(),t.layers.toggle(1),u.render(),t.layers.enableAll()},composer:u}}var ke=n(466),Te=n.n(ke),Re=n(11);class je{constructor(e,t,n,o,i){this.scene=e,this.shaderTextures=i,this.manager=t,this.material=null,this.id=o.id,this.isInstanced=o.isInstanced,this.nInstances=o.nInstances,this.height=o.height,this.layoutHeight=a.modelHeight,this.scale=o.scale,this.useNormal=o.useNormal,this.rotateAroundCenter=o.rotateAroundCenter,this.isLayout=o.isLayout,this.isStand=o.isStand,this.textures=n[this.id],this.type=o.type,this.ref=null,this.castShadows=o.castShadows,this.BOTTLE_LAYER=3}load(){a.colors,"bottle"===this.type?this.material=function(e){const t=e=>e.split(";").join(";\n").split("\n");let n=t("\nvarying vec3 vPositionW;\nvarying vec3 vNormalW;\n\nfloat Fresnel(vec3 eyeVector, vec3 worldNormal, float _pow) {\n    return pow( 1.0 + dot(eyeVector, worldNormal), _pow);\n}\n\n"),i=t("\nvarying vec3 vPositionW;\nvarying vec3 vNormalW;\n"),a=t("\nvec3 fresnelColor = vec3(1., 1., 2.);\nvec3 offset = vec3(0.0, 0.0, 0.0);\nvec3 viewDirectionW = normalize(cameraPosition - vPositionW);\nfloat fres = Fresnel(viewDirectionW, vNormalW, 2.0);\nfres = clamp(fres, 0.0, 1.0);\ndiffuseColor.a += 1.0 -fres;\n// diffuseColor.a = fresnelTerm;\ngl_FragColor = vec4( outgoingLight, diffuseColor.a*(max(fres*.7, .2)) );\n// gl_FragColor = vec4( vec3(fres), 1.0 );\n"),s=t("\n    vPositionW = vec3( vec4( position, 1.0 ) * modelMatrix);\n    vNormalW = normalize( vec3( vec4( normal, 0.0 ) * modelMatrix ) );\n"),r=new o.xoR({color:h(e.color,0,.8),bumpMap:e.noise,bumpScale:1,emissive:e.color,emissiveIntensity:e.emissiveIntensity,shininess:200,opacity:e.opacity,transparent:e.transparent,envMap:e.envMap,reflectivity:1});return r.onBeforeCompile=e=>{let t=e.fragmentShader.split("\n"),o=e.vertexShader.split("\n");t.splice(1,0,...n),t.splice(-1,0,...a),o.splice(0,0,...i),o.splice(-1,0,...s),e.fragmentShader=t.join("\n"),e.vertexShader=o.join("\n")},r}({color:new o.Ilk("white"),noise:this.shaderTextures.tilingNoise.target,envMap:this.scene.environment,transparent:!0,emissiveIntensity:.3,opacity:.2}):"window_1"===this.id?this.material=new o.EJi({roughnessMap:this.textures.roughness,map:this.textures.diffuse,metalnessMap:this.textures.metallic,normalMap:this.textures.normal,emissiveIntensity:1.4,emissive:new o.Ilk("white"),emissiveMap:this.textures.emissive,bumpScale:1,envMap:this.scene.environment,envMapIntensity:0}):this.material=new o.EJi({roughnessMap:this.textures.roughness,map:this.textures.diffuse,metalnessMap:this.textures.metallic,normalMap:this.useNormal?this.textures.normal:null,bumpMap:this.useNormal?null:this.textures.bump,bumpScale:1,roughness:1,envMap:this.scene.environment,envMapIntensity:0===this.type});let e=m(this);return new Re.L(this.manager).load(e,(e=>{console.log("loaded",e);let t=[];if(e.traverse((e=>{if(e instanceof o.Kj0){if(this.isInstanced){const n=new o.SPe(e.geometry,this.material,this.nInstances);t.push(n)}e.material=this.material,this.castShadows&&(e.castShadow=!0,e.receiveShadow=!0)}})),this.ref=e,this.isLayout)e.scale.multiplyScalar(305),e.position.set(0,-this.layoutHeight,0);else if(this.isStand)e.scale.multiplyScalar(305),e.position.set(0,-this.layoutHeight,0);else if(this.isLayout||this.isInstanced){if(this.isInstanced){const e=g(1700,this.nInstances),n=this.scale,i=this.height;if(this.rotateAroundCenter){const e=2*Math.PI/this.nInstances;for(let i=0;i<this.nInstances;i++){const a=new o.Tme;a.rotation.y=e*i,a.scale.set(n,n,n),a.position.set(0,-this.layoutHeight,0),a.updateMatrix(),t.forEach((e=>{e.instanceMatrix.needsUpdate=!0,e.setMatrixAt(i,a.matrix),this.scene.add(e)}))}}else e.forEach(((e,a)=>{const s=new o.Tme;s.position.set(e[0],i,e[1]),s.position.set(e[0],i,e[1]),s.scale.set(n,n,n),s.lookAt(0,i,0),s.updateMatrix(),t.forEach((e=>{e.instanceMatrix.needsUpdate=!0,e.setMatrixAt(a,s.matrix),this.scene.add(e)}))}))}}else e.scale.multiplyScalar(120),"walls"===this.type&&e.scale.set(120,150,120),e.position.set(0,-this.layoutHeight,0);"floor"===this.id&&(e.position.y+=1,this.scene.add(e.clone()),e.position.y+=1020,e.scale.set(120,-120,120)),"bottle"===this.id&&e.children.forEach((e=>e.layers.set(4))),this.isInstanced||this.scene.add(e)}),(function(e){}),(function(e){console.log("An error happened",e)}))}unload(){this.scene.remove(this.ref)}}var Ue=n(702),Ae=n(914),Be=n.n(Ae),Le=n(775),Ke=n.n(Le);class Ge{constructor(e){this.textures={},this.renderer=e}updateImageTypes(e,t){let n=[...t];return a.textures[e].include.forEach((e=>{n.push(e)})),n}load(e){const t=new o.dpR,n=e.filter((e=>0!==e.materials.length)),i=[];return n.forEach((e=>{let n=c(e.materials)[0];"pipes"===e.id&&(n=e.materials[7]),"floor"===e.id&&(n=e.materials[0]),-1!==e.previewMaterial&&(n=e.materials[e.previewMaterial-1]),e.textures.forEach((a=>{i.push(new Ue.Promise(((i,s)=>{let r=m(e,n,a);t.load(r,(t=>{t.anisotropy=1,t.name=a;const n={};n[e.id]=t,n[e.id]instanceof o.xEZ&&i(n)}),void 0,(t=>console.log("ERROR",t,r,e.id)))})))}))})),Ue.Promise.all(i).then((e=>{let t={},n="";l.randomDec(),l.randomDec();for(let i=0;i<e.length;i++){const s=Object.keys(e[i])[0];s!==n&&(t={});const r=e[i][s].name;let d=e[i][s];const c=a.models[s].useColors;if(("diffuse"===r||"emissive"===r)&&!c){const e=Math.min(l.randomDec(),.2),t=Math.min(l.randomDec(),.2);let n=h(a.primaryColor,-e,.4),i=h(a.secondaryColor,-t,0);"pipes"===s&&(n=new o.Ilk("white"),i=a.primaryColor);const c=new o.jyz({uniforms:{tDiffuse:{value:d},color1:{value:"emissive"===r?new o.Ilk("black"):n},color2:{value:i}},vertexShader:Ke(),fragmentShader:Be()});d=f(this.renderer,c,1024,1).texture}t[r]=d,this.textures[s]=t,n=s}}),(e=>console.log(e)))}}const We="\n\n float mid = 0.5;\n float rotation = -PI/2.0;\n vec2 rotatedUv = vec2(\n        cos(rotation) * (vUv.x - mid) + sin(rotation) * (vUv.y - mid) + mid,\n        cos(rotation) * (vUv.y - mid) - sin(rotation) * (vUv.x - mid) + mid\n    );\nvec4 p = vec4(vPosition*0.02, 1.0);\nvec4 p1 = vec4(vPosition*0.04, 2.0);\nvec2 flipUv = vec2(vUv.x, 1.0 -vUv.y);\nfloat _noise = texture2D(noise, flipUv).r;\nfloat noiseMap = smoothstep(0.0, 0.3, _noise);\nfloat height =vHeight/maxHeight;\n// float fbmNoise = fbm(p,5);\n// vec3 normalsFromGeo = normalize( vNormal );\n// vec4 phasorNoise = local_random_phasor_noise(vUv, 4.0, 1, vec2(9.4, 14.5), vec2(0., m_pi/6.));\n// vec4 phasorMasked = mix(vec4(1.0), phasorNoise, 1.0-noiseMap);\nfloat slopeScale = .003;\n// vec3 proceduralNormals = normal_map_from_slope(phasorNoise.z*slopeScale, phasorNoise.w*slopeScale);\n// proceduralNormals = mix(normalsFromGeo, proceduralNormals*normalsFromGeo, 1.0-noiseMap);\nvec3 heightBlend = mix(diffuse2, diffuse,height+noiseMap*.4);\ndiffuseColor = vec4(heightBlend, 1.0);\n",Ve=o.WdD.meshphysical_frag,He=o.WdD.meshphysical_vert.slice(0,o.WdD.meshphysical_vert.indexOf("#include <uv_vertex>")),Oe=o.WdD.meshphysical_vert.slice(o.WdD.meshphysical_vert.indexOf("#include <uv_vertex>"));o.WdD.normal_fragment_maps.replace("normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;","normal = proceduralNormals;");class qe{constructor(e){const t="void main",n=a.terrain.type,i=a.tower.weather,s="vec4 diffuseColor = vec4( diffuse, opacity );",r=Ve.split(t),l=(t+r[1]).split(s),d=l[0]+s,c=l[1],u=r[0],m=["#define USE_SCREEN_UV","fog"===i?"#define USE_FOG":"","#define USE_ENVMAP","#define ENVMAP_MODE_REFLECTION","#define ENV_WORLDPOS","dune"===n?"#define USE_NORMALMAP":"","dune"===n?"#define OBJECTSPACE_NORMALMAP":"","#define ENVMAP_TYPE_CUBE","#define ENVMAP_BLENDING_MULTIPLY","#define USE_UV","#define USE_BUMPMAP","varying vec3 vPosition;","varying float vHeight;","uniform vec3 diffuse2;","uniform sampler2D noise;"].join("\n"),f={...o.Vj0.physical.uniforms,diffuse:{value:e.diffuse},diffuse2:{value:e.diffuse2},roughness:{value:e.roughness},metalness:{value:e.metalness},noise:{value:e.noise},fogNear:{value:5500},fogFar:{value:7e3},fogColor:{value:e.fogColor},envMap:{value:e.envMap},bumpMap:{value:e.bumpMap},maxHeight:{value:e.maxHeight},resolution:{value:new o.FM8(N.fullScreenRes.width,N.fullScreenRes.height)},envMapIntensity:{value:e.envMapIntensity},bumpScale:{value:e.bumpScale},reflectivity:{value:1}};return this.fragmentShader=["uniform float maxHeight;",m,E,u,_,M,d,We,c].join("\n"),this.vertexShader=["#define USE_FOG",I,He,D,Oe].join("\n"),this.type="TerrainMaterial",new o.jyz({uniforms:f,fragmentShader:this.fragmentShader,vertexShader:this.vertexShader,lights:!0})}}var Qe=n(846),Ze=n.n(Qe);const Ye={vertexShader:Ne(),fragmentShader:["varying vec2 vUv;","varying vec3 vPosition;","varying vec3 vNormalW;","varying vec3 vNormal;","uniform float scale;","uniform float noiseScale;","uniform int detail;","uniform int terrainType;","uniform bool isSpots;","uniform bool isAbs;","uniform float offset;",_,"\nconst float m_pi_2 = 1.5707963267;         \nconst float m_pi   = 3.1415926535;          \nconst float m_2_pi = 6.2831853071;  \nconst int   LRPN_COSINES     = 3;\nconst float LRPN_RESOLUTION  = 5.0;\nconst float LRPN_SLOPE_SCALE = 0.1;\nconst uint  LRPN_GLOBAL_SEED = 0u;\nuint  wang_hash(uint seed)                                          {seed=(seed^61u)^(seed>>16u);seed*=9u;seed=seed^(seed>>4u);seed*=668265261u;seed=seed^(seed>>15u);return(seed);}\nuint  cell_seed(const in ivec2 c, const in uint offset)             {const uint period=1024u;uint s=((uint(c.y)%period)*period+(uint(c.x)%period))*period+offset; if(s==0u){s = 1u;}return(s);}\nuint  myrand(inout uint p)                                          {p^=(p<<13u);p^=(p>>17u);p^=(p<<5u);return p;}\nfloat myrand_uniform_0_1(inout uint p)                              {return float(myrand(p))/float(4294967295u);}\nfloat myrand_uniform_m_M(inout uint p, in float mi, in float ma)    {return mi + (myrand_uniform_0_1(p) * (ma - mi));}\nvec3 normal_map_from_slope(float dx, float dy) // using partial derivatives\n{\n    float norm = length(vec3(dx,dy,1.0));\n    float nx = -dx / norm; \n    float ny = -dy / norm; \n    float nz = 1.0 / norm; \n    return 0.5 + 0.5 * vec3(nx,ny,nz);\n}\nfloat gaussian(in vec2 st, in float c, in vec2 mu, in mat2 sig)\n{\n    vec2 p = st-mu;\n    float body = -0.5*dot(p,inverse(sig)*p);\n    return c*exp(body);\n}\n\nvec4 local_random_phasor_noise(\n        in vec2  texcoords,\n        in float resolution,\n        in int   cosines,\n        in vec2  range_frequency,\n        in vec2  range_orientation\n    )\n{\n    vec2  scaled_coords = texcoords * resolution;\n    vec2  cell_coords   = fract(scaled_coords);\n    vec2  cell_index    = floor(scaled_coords);\n    \n    ivec2 cell_ID;\n    uint  prng, seed;\n    \n    vec4  lrpn   = vec4(0.);\n    float weight = 1. / float(cosines);\n    mat2  sigma  = mat2( (1.2*1.2)/m_2_pi );\n\n    for (int m=-1; m<=+1; m++)\n    for (int n=-1; n<=+1; n++)\n    {\n        cell_ID.x = int(cell_index.x) + m;\n        cell_ID.y = int(cell_index.y) + n;\n        seed = cell_seed(cell_ID,LRPN_GLOBAL_SEED);\n        prng = wang_hash(seed);\n\n        vec2 xy = cell_coords - vec2(m,n) - vec2(0.5);\n        float d = dot(xy,xy);\n        \n        vec2  sum_of_cosines    = vec2(0.); \n        float sum_of_partial_x  = 0.; \n        float sum_of_partial_y  = 0.; \n        for(int k=0; k<cosines; k++)\n        {\n            float fr = myrand_uniform_m_M(prng,range_frequency.x,range_frequency.y) * resolution;   // Scaled Frequency \n            float or = myrand_uniform_m_M(prng,range_orientation.x,range_orientation.y);            // Orientation\n            float ph = m_pi*(myrand_uniform_0_1(prng)*2.-1.);                                       // Phase\n            float ff = m_2_pi * dot(xy, fr * vec2(cos(or),sin(or)) );                               // Oriented Frequency\n            vec2  sc = vec2( cos(ff+ph), sin(ff+ph) ); \n\n            sum_of_cosines   += sc;\n            sum_of_partial_x += -m_2_pi * fr * cos(or) * sc.y;\n            sum_of_partial_y += -m_2_pi * fr * sin(or) * sc.y; \n        }\n\n        lrpn += gaussian(xy, 1., vec2(0.0), sigma) * weight * vec4(sum_of_cosines, sum_of_partial_x, sum_of_partial_y);\n    }\n    return vec4(lrpn); // vec3(Cosines, Sines, Partial X, Partial Y); \n}\n",M,"\nfloat fbmTerrain(vec4 p, int detail) {\n    float sum = 0.0;\n    float amp = 0.6;\n    float _scale = 10.0;\n\n    for(int i =0; i<detail; i++) {\n       sum += snoise(p*_scale)*amp;\n        // p.w += 100.0;\n        amp *=0.4;\n        _scale *= 2.0;\n    }\n    return sum;\n}\n\nvoid main() {\n    vec4 p = vec4(vPosition*scale+vec3(offset), 1.0);\n    vec4 p1 = vec4(vPosition*(scale/2.0)-vec3(offset+2.231), 1.0);\n    vec4 phasorNoise = local_random_phasor_noise(vUv, 5.0, 3, vec2(0.4, 0.5), vec2(0., m_pi/6.));\n    // float classicNoise = cnoise(vPosition.xyz*.12+vec3(offset);\n    float noisy = abs(fbm(p, detail)-.5);\n    if (terrainType == 1) {\n        // float classicNoise = cnoise(vPosition.xyz*.02 +vec3(offset));\n        // gl_FragColor = vec4(vec3(classicNoise),1.0);\n        float fbmNoise = fbmTerrain(p*noiseScale+vec4(offset), 4);\n        gl_FragColor = vec4(vec3(fbmNoise),1.0);\n    }\n    if (terrainType ==2){\n        float fbmNoise = fbmTerrain(p*noiseScale+vec4(offset), 7)*.9;\n        if (isAbs) {\n            fbmNoise = abs(fbmNoise);\n        }\n        gl_FragColor = vec4(vec3(fbmNoise),1.0);\n    }\n    // gl_FragColor = phasorNoise;\n}\n"].join("\n")};function Xe(e,t){const n=256,i=a.terrain.type,s="night"===a.scene.timeOfDay,r={dune:{id:1,noiseScale:l.randomNum(.02,.04)},rocks:{id:2,noiseScale:l.randomNum(.08,.12)}},d=function(){let e=new o.jyz({vertexShader:Ye.vertexShader,fragmentShader:Ye.fragmentShader,uniforms:{scale:{value:.0282},detail:{value:2},isSpots:{value:!1},isAbs:{value:l.randomDec()>.5},noiseScale:{value:r[i].noiseScale},offset:{value:l.randomNum(-100,100)},terrainType:{value:r[i].id}}});return f(t,e,n,1)}();a.colors;let c=function(e){let t=[];for(let n=0,o=e.length;n<o;n+=4)t.push((e[n]+e[n+1]+e[n+2])/3);return t}(function(){"rocks"===i?l.randomNum(.2,.35):l.randomNum(.2,.5);let e=new o.jyz({vertexShader:Ye.vertexShader,fragmentShader:Ze(),uniforms:{noise:{value:d.texture},innerCircleScale:{value:.47},noiseScale:{value:.6}},side:o.ehD});const a=f(t,e,n,1),s=new Uint8Array(262144);return t.setRenderTarget(null),t.readRenderTargetPixels(a,0,0,n,n,s),s}()),u=new o._12(7400,7400,255,255);const m=u.attributes.position.array,v=new Float32Array(u.attributes.position.count);let p=0;for(let e=2,t=0;e<m.length;e+=3,t++){let n=3.3*c[t];m[e]=n,v[t]=n,p=n>p?n:p}u.setAttribute("height",new o.TlE(v,1)),c=null,u.computeFaceNormals(),u.computeVertexNormals(),u.rotateX(-Math.PI/2);let h=new qe({diffuse:a.primaryColor,diffuse2:a.secondaryColor,fogColor:e.background,side:o.ehD,maxHeight:p,noise:d.texture,metalness:.3,roughness:.95,envMapIntensity:s?.4:1,envMap:e.environment}),g=new o.Kj0(u,h);const x=a.modelHeight;g.position.set(0,-x-480,0),e.add(g),this.update=()=>{h.uniforms.fogFar.value=e.distToCenter+2300+2e3,h.uniforms.fogNear.value=e.distToCenter+2300}}["uniform float size;","uniform float scale;","attribute float angle;","varying vec2 vAngle;","void main() {","#include <begin_vertex>","#include <project_vertex>","gl_PointSize = size;","vAngle = vec2(cos(angle), sin(angle));","#ifdef USE_SIZEATTENUATION","bool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );","if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );","#endif","}"].join("\n"),["uniform vec3 diffuse;","uniform float opacity;","varying vec2 vAngle;","#include <map_particle_pars_fragment>","uniform sampler2D sceneDepthTexture;","uniform vec2 screenSize;","uniform float fCamNear;","uniform float fCamFar;","float fadeEdge( float particleDepth, float sceneDepth ){","float extraMargin = 0.015; ","float a = ( sceneDepth+extraMargin - particleDepth ) * 120.0;","if( a <= 0.0 ) return 0.0;","if( a >= 1.0 ) return 1.0;","if( a < 0.5 ) a = 2.0 * a * a;","else a = -2.0 * pow( a - 1.0 , 2.0 ) + 1.0;","return a;","}","#include <packing>","float getLinearDepth( float fragCoordZ ) {","float viewZ = perspectiveDepthToViewZ( fragCoordZ, fCamNear, fCamFar );","return viewZToOrthographicDepth( viewZ, fCamNear, fCamFar );","}","void main() {","vec3 outgoingLight = vec3( 0.0 );","vec4 diffuseColor = vec4( diffuse, opacity );","mat2 rotationMatrix = mat2(vAngle.x, vAngle.y, -vAngle.y, vAngle.x);","vec2 pivot = vec2(.5, .5);","vec2 rotatedPointCoord =rotationMatrix * (gl_PointCoord.xy - pivot) + pivot;","vec2 uv = ( uvTransform * vec3( rotatedPointCoord.x, 1.0 - rotatedPointCoord.y, 1 ) ).xy;","diffuseColor *= texture2D( map, uv );","outgoingLight = diffuseColor.rgb;","vec2 screenCoords = gl_FragCoord.xy / screenSize;","float thisDepth = getLinearDepth( gl_FragCoord.z );","float solidsDepth = 1.0- texture2D( sceneDepthTexture , screenCoords ).r;","solidsDepth = getLinearDepth( solidsDepth );","float alphaScale = fadeEdge( thisDepth, solidsDepth );","diffuseColor.a *= alphaScale;","gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n");var Je=n(660);function $e(e,t){const n=a.colors,i=new o.zf8(1800,16);console.log(t);let s=new Je.B(i,{textureWidth:1024,textureHeight:1024,waterNormals:(new o.dpR).load("tex/water_normal_1.jpg",(function(e){e.wrapS=e.wrapT=o.rpg})),waterColor:h(n[1],-.4,-.35),sunDirection:new o.Pa4,sunColor:16777215,distortionScale:1.7,fog:void 0!==e.fog});return s.position.y=-320,s.rotation.x=-Math.PI/2,s.material.uniforms.size.value=.08,e.add(s),{update:e=>{s.material.uniforms.time.value=.4*e}}}var et={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor = opacity * texel;\n\t\t\t// gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n\t\t\tgl_FragColor = vec4(1.0 -texel.r, 0.0, 0.0, 1.0);\n\n\t\t}"};function tt(e,t,n){let i=new o.lRF,a=new Me.C(t,n,i);new ze.T(et);const s=new ze.T(Pe.C),r=new Se.xC(e);return r.renderToScreen=!1,r.addPass(a),r.addPass(s),{target:r.readBuffer,update:()=>{n.layers.enableAll(),n.layers.toggle(4),r.render(),n.layers.enableAll()}}}class nt{constructor(e){return this.scene=new o.xsS,this.renderer=e,this.camera=new o.iKG(-1,1,1,-1,0,1),this}addMaterial(e){const t=new o.xoR({emissiveMap:e,emissive:new o.Ilk("white")}),n=new o.BKK(2,2),i=new o.Kj0(n,t);i.position.set(.5,0,0),i.scale.setScalar(.4,.4,1),this.scene.add(i)}render(){this.renderer.render(this.scene,this.camera)}}const ot=[];if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)){const e=document.getElementById("start-btn");e.classList.remove("hide");const t=document.getElementById("loading-btn");document.getElementById("video-wrapper").classList.remove("hide"),t.classList.add("hide"),e.onclick=function(e){const t=document.getElementById("loading"),n=document.getElementById("mobile-preview");document.getElementById("ticker").classList.remove("hide"),n.play(),t.classList.add("hide")}}else{const e=document.getElementById("canvas"),t=new function(e){!function(){(()=>{let e="mixed";a.tower.materialType=e,a.attributes.push(new xe("Tower Material",e));let t=w({monochrome:.2,twoColor:.2,threeColor:.2,multiColor:.2})();a.attributes.push(new xe("Number of Colors",t)),a.colors=function(e,t){new ge("pink",["#FF68C7"]),new ge("grey 1",["#707C89"]),new ge("grey 2",["#656977"]),new ge("light blue",["#3094FF"]),new ge("purple",["#7E21CB"]),new ge("blood angel",["#F00C09"]),new ge("orange 1",["#FC6C5B"]),new ge("orange 2",["#F1AA12"]),new ge("misty mountain",["#2E9F75"]),new ge("blue",["#4157FF"]),new ge("aquamarine",["#FF2928","#85C1F4"]),new ge("princess",["#FF9ACC","#713ABD"]),new ge("raver",["#BCFA9B","#7D7CDA"]),new ge("eevee",["#FF8AD4","#FF2B00"]),new ge("simic",["#2481E1","#9BF767"]),new ge("racer",["#6A1FCE","#EB4428"]),new ge("bombay",["#1AE49D","#E8C41F"]),new ge("christmas",["#FC6C5B","#69EC14"]),new ge("captain",["#FF2928","#85C1F4","#3F64B5"]),new ge("anime",["#8D7EEC","#28DD03","#F81E30"]),new ge("trident",["#3F54FC","#F84666","#C4A6FE"]),new ge("mystery",["#F96778","#CFEE78","#3EAAEB"]),new ge("shield",["#2481E1","#7BF238","#CBD3E6"]),new ge("volcanic",["#FC6C5B","#69EC14","#FD8E24"]),new ge("neon",["#FF7992","#80FE6D","#E181FF"]),new ge("breeze",["#5AFFFC","#F971A5","#4157FF"]),new ge("chocolate",["#FA5229","#80469F","#82584A"]),new ge("fido",["#f83435","#43c9e6","#fa9416"]),new ge("rainbow",["#C174E9","#EF3F34","#20D534","#3DA9CE","#072EDC","#E6ABB6","#C174E9","#EF3F34","#20D534","#3DA9CE","#072EDC","#E6ABB6"]),new ge("peaches",["#EB9ABC","#F76C51","#72DE38","#FEFE3A"]),new ge("ludibirum",["#6A1FCE","#EB4428","#F5D934","#2F63BB"]),new ge("wilderness",["#FB5A0F","#FD72A7","#469FF0","#2E9F75"]),new ge("mermaid",["#FF7992","#80FE6D","#E181FF","#4FD1FB"]),new ge("finance",["#FBE613","#364BE7","#EF1D1A","#226954"]),new ge("terra",["#5100E3","#F00C09","#FFD300","#FC7300"]),new ge("comic",["#C174E9","#EF3F34","#20D534","#3DA9CE","#072EDC","#E6ABB6"]);const n=[new ge("ludibirum",["#6A1FCE","#EB4428","#F5D934","#2F63BB"]),new ge("le monde",["#6552E2","#0D5919","#FFAAFF","#FFFFFF","#000000"])][0],o=n.colors;return l.randomInt(0,o.length-1),o.length,a.primaryColor=n.colors[0],a.secondaryColor=n.colors[3],o}(),a.colorType=t})();const e=w({day:0,night:.1,dusk:0})();a.attributes.push(new xe("Time of day",e)),a.time=e;const t=w({fog:.5,clear:0})();"fog"===t&&(a.scene.isFog=!0,a.scene.fogSaturation=-.35),a.tower.weather=t,u(a.nLayouts),u(a.nStands),a.layout=a.layoutData[7],a.layoutId="7",a.standId="4",a.attributes.push(new xe("Base Id","4")),a.attributes.push(new xe("Tank Id","7"));const n=w({indoors:0,windows:.4})();(e=>{if(a.floor="floor","indoors"===e)a.props=l.randomDec()>.5?["window_1"]:[],a.walls="simple_wall";else{const e=[];Object.keys(a.models).forEach((t=>{"walls"===a.models[t].type&&e.push(t)}));const n=function(e){const t={};for(let n=1;n<e.length;n++)t[e[n]]=.2;return t}(e);a.walls=w(n)(),a.walls="brutalist_1","platform_base"===a.walls&&(a.floor=""),a.props=[],a.attributes.push(new xe("Weather",t))}a.attributes.push(xe("Environment",a.walls))})(n),(e=>{if("indoors"===e)return;let t=l.randomDec()>0?"terrain":"";const n=w({dune:0,rocks:.5})();"terrain"===t&&(a.attributes.push(new xe("Terrain",n)),a.scene.isTerrain=!0),a.scene.isTerrain="terrain"===t,a.terrain.type=n})(n),(e=>{switch(e){case"random":a.tower.numPresets=l.randomInt(2,20),a.tower.segments={min:3,max:25},a.tower.numParts={min:1,max:8},a.tower.combined=l.randomDec()>.5;break;case"simple":a.tower.numPresets=l.randomInt(1,2),a.tower.numParts={min:1,max:3},a.tower.isSinglePartSystem=1===a.tower.numPresets}})(w({simple:.05,random:.95})()),console.log("attributes",a.attributes)}();const t=a.scene;let n;const i=new(Te());i.showPanel(1),t.isControls;const s="night"===t.timeOfDay,r=(t.isAnimatedCamera,t.baseHeight);let d=0;t.hdri;const c={width:window.innerWidth,height:window.innerHeight},m=(new o._fP,function(){const e=new o.xsS;return e.background=new o.Ilk("#000"),e}());if(m.background=new o.Ilk("black"),t.isFog){let e=a.primaryColor;s&&(e=h(e,-.5,-.3)),m.background=e}let f,v,p,g;const x=function({width:t,height:n}){const i=new o.CP7({canvas:e,antialias:!0,alpha:!0,preserveDrawingBuffer:!0}),s=window.devicePixelRatio?window.devicePixelRatio:1;return a.DPR=s,i.setPixelRatio(s),i.setSize(t,n),i.shadowMap.enabled=!0,i.shadowMap.type=o.ntZ,i}(c),b=new nt(x),_=new Ge(x),M=new o.lLk(x),S={},P=function({width:e,height:t}){return new o.cPb(15,e/t,2,22e3)}(c);m.mainCamera=P;const C=new re.z(P,x.domElement);C.dampingFactor=2,C.maxPolarAngle=Math.PI/2,C.autoRotate=!0,C.autoRotateSpeed=-.3,C.target.set(0,100,0),C.minPolarAngle=Math.PI/5,C.enableDamping=!1,C.maxDistance=4e3,C.minDistance=1e3,C.minZoom=.6,C.maxZoom=3,f=function(e){const t=l.randomDec(),n=Math.floor(y(t,30,80)),o=Math.floor(y(t,10,12)),i=new Y(e,n),a=new ce(e,i.target,1,.17,.2,1,o),s=new J(e,a.target),r=new tt(e,m,P);return b.addMaterial(r.target.texture),m.environment=s.target.texture,m.gradient=i.target.texture,{gradient:i,gradientCube:s,tilingNoise:new se(e),hueShiftGradient:new ce(e,i.target,0,-.6,.2,1,n),hdriGradient:a,sceneDepth:r}}(x);const F=function(){const e=a.layoutData[a.layoutId],t=a.standData[a.standId];return(()=>{const n=[],o=t.stand?["base","stand"]:["base"];return a.props.forEach((e=>{const t=a.models[e];n.push(t)})),["bottle","bottle_top","pipes","gas_tank"].forEach((t=>{const o=a.models[t];"bottle"!==t&&o.setMaterialsFromN(e.nTextures),"pipes"===t&&o.setMaterialsFromN(o.nMaterials),n.push(o)})),o.forEach((e=>{const o=a.models[e];"base"===e&&o.setMaterialsFromN(t.nBaseTextures),"stand"===e&&o.setMaterialsFromN(t.nStandTextures),n.push(o)})),a.walls&&n.push(a.models[a.walls]),"floor"===a.floor&&n.push(a.models.floor),n})()}();_.load(F).then((()=>{F.forEach((e=>{const t=new je(m,M,_.textures,e,f);t.load("object"),S[e.type]=t})),function(e){const t=new o.SJI;e.add(t),n=new o.BbS(t),new o.mTL(M).load("https://arweave.net/avHOLCRXbiKIXZjdV-kFcrVsRh1pjZsD5J55YrM-2k8",(function(e){n.setBuffer(e),n.setLoop(!0),n.setVolume(.5)}))}(P)})),M.onLoad=()=>{a.isLoaded=!0,(()=>{const e=document.getElementById("start-btn");e.classList.remove("hide"),document.getElementById("loading-btn").classList.add("hide"),e.onclick=function(e){document.getElementById("loading").classList.add("hide"),n.play()}})(),v=function(e,n){const i=new X,d=new pe(e,new he(i)),c=new te(e,new ve(i,d.data,e)),u=s?f.hueShiftGradient.target:f.gradient.target,m=(f.sceneDepth,function(e,t,n,i,s){let r=new o.dpR,d=[];a.colors;const c=h(a.primaryColor,-0,.1);r.load("https://arweave.net/bNA4x6BQYEjzfJhrWI4d5iQvfLXhQPShuK8Qpkg33NQ",(function(t){for(let n=0;n<150;n++){let n=new o.xeV({color:c,map:t,blending:o.WMw,transparent:!0,clipIntersection:!1,opacity:.11}),a=new o.jyi(n);a.scale.set(550,550);const s=new o.Pa4(0,0,0),r=new o.Pa4(l.randomNum(-1200,i),25*l.randomDec()-180-15,l.randomNum(-1200,i)),u=r.distanceTo(s);a.position.set(r.x,r.y,r.z),a.material.rotation=360*Math.random(),u>200&&(d.push(a),a.name="particle",a.layers.set(2),e.add(a))}u()}));const u=()=>{d.forEach((e=>{}))};return{update:u}}(e,0,0,1200));if(t.isTerrain)return[c,d,m,"water"===a.floor?new $e(e):{},new me(e,100,[0,20,0],r/2),t.isFog?{}:new _e(e,u),be(e),t.isTerrain?new Xe(e,x):{},new W(e)]}(m),g=function(e){const t=new De(e,P,x);return e.noise=t.composer.writeBuffer,[t]}(m),p=new ue,p.setup(m,v[0].towers),ot.push(p.onWindowResize),d=100,P.position.set(0,d+800,30*d)},this.update=function(){const e=P.position.distanceTo(new o.Pa4(0,100,0));if(m.distToCenter=e,P.near=e-850,P.far=e+8e3,P.updateProjectionMatrix(),a.isLoaded){i.begin(),N.time+=.01;for(let e=0;e<v.length;e++)v[e].update&&v[e].update(N.time);Object.keys(f).forEach((e=>{f[e].update()})),C.update(),p.update(),x.autoClear=!1,x.render(m,P);for(let e=0;e<g.length;e++)g[e].update&&g[e].update();i.end()}},this.onWindowResize=function(){const e=window.innerWidth,t=window.innerHeight;c.width=e,c.height=t,P.aspect=e/t,P.updateProjectionMatrix(),ot.forEach((e=>{e()})),x.setSize(e,t)}}(e);function n(){window.onresize=i,i()}function i(){e.style.width="100%",e.style.height="100%",e.width=e.offsetWidth,e.height=e.offsetHeight,t.onWindowResize()}function s(){requestAnimationFrame(s),t.update()}n(),s()}}},n={};function o(e){var i=n[e];if(void 0!==i)return i.exports;var a=n[e]={exports:{}};return t[e].call(a.exports,a,a.exports,o),a.exports}o.m=t,e=[],o.O=(t,n,i,a)=>{if(!n){var s=1/0;for(c=0;c<e.length;c++){for(var[n,i,a]=e[c],r=!0,l=0;l<n.length;l++)(!1&a||s>=a)&&Object.keys(o.O).every((e=>o.O[e](n[l])))?n.splice(l--,1):(r=!1,a<s&&(s=a));if(r){e.splice(c--,1);var d=i();void 0!==d&&(t=d)}}return t}a=a||0;for(var c=e.length;c>0&&e[c-1][2]>a;c--)e[c]=e[c-1];e[c]=[n,i,a]},o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={179:0};o.O.j=t=>0===e[t];var t=(t,n)=>{var i,a,[s,r,l]=n,d=0;if(s.some((t=>0!==e[t]))){for(i in r)o.o(r,i)&&(o.m[i]=r[i]);if(l)var c=l(o)}for(t&&t(n);d<s.length;d++)a=s[d],o.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return o.O(c)},n=self.webpackChunk=self.webpackChunk||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})();var i=o.O(void 0,[216],(()=>o(182)));i=o.O(i)})();